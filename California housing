{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMpEftVSVB+R1s/dUCO594L"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"W6LLIhAFQPx4"},"outputs":[],"source":["# Implementar una red neuronal para regresion utilizando keras\n","import keras\n","from sklearn.datasets import fetch_california_housing\n","from sklearn.model_selection import train_test_split\n","from sklearn.preprocessing import StandardScaler\n","\n","import pandas as pd\n","import matplotlib.pyplot as plt"]},{"cell_type":"code","source":["#Cargar el conjunto de datos\n","housing = fetch_california_housing()\n","#Crear conjunto de entrenamiento, validacion y prueba\n","x_train_full, x_test, y_train_full, y_test = train_test_split(housing.data, housing.target)\n","x_train, x_valid, y_train, y_valid = train_test_split(x_train_full, y_train_full)\n","\n","print(\"x_train: \", x_train.shape)\n","print(\"x_test: \", x_test.shape)\n","print(\"x_valid: \", x_valid.shape)\n","print(\"y_train: \", y_train.shape)\n","print(\"y_test: \", y_test.shape)\n","print(\"y_valid: \", y_valid.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ojnfLFIvRFp1","executionInfo":{"status":"ok","timestamp":1757267100364,"user_tz":300,"elapsed":1430,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"35a609a7-ca00-4288-c029-9a97068b9016"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["x_train:  (11610, 8)\n","x_test:  (5160, 8)\n","x_valid:  (3870, 8)\n","y_train:  (11610,)\n","y_test:  (5160,)\n","y_valid:  (3870,)\n"]}]},{"cell_type":"code","source":["#Escalar los datos\n","scaler = StandardScaler()\n","x_train = scaler.fit_transform(x_train)\n","x_test = scaler.transform(x_test)\n","x_valid = scaler.transform(x_valid)\n"],"metadata":{"id":"vvgfz7zJSGYX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Crear un modelo de red neuronal\n","model = keras.models.Sequential([\n","    keras.layers.Dense(30, activation=\"relu\", input_shape=x_train.shape[1:]),\n","    keras.layers.Dense(1)\n","])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Np_effT_SZcM","executionInfo":{"status":"ok","timestamp":1757267235381,"user_tz":300,"elapsed":152,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"339ac3e9-3e49-42c8-bf4a-c7a2befcd5f9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/keras/src/layers/core/dense.py:93: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}]},{"cell_type":"code","source":["#Compilar el modelo\n","model.compile(loss=\"mean_squared_error\", optimizer=\"sgd\",metrics=[keras.metrics.RootMeanSquaredError(), keras.metrics.MeanAbsoluteError()])"],"metadata":{"id":"hRwY_h2iTD2L"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Entrenar el modelo\n","history = model.fit(x_train, y_train, epochs=20, validation_data=(x_valid, y_valid))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HHNSUrehVDzV","executionInfo":{"status":"ok","timestamp":1757267965869,"user_tz":300,"elapsed":26229,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"e64b0a8e-b85f-4a93-ef66-a69011ba6e11"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - loss: 1.1089 - root_mean_squared_error: 1.0288 - val_loss: 0.6832 - val_root_mean_squared_error: 0.8266\n","Epoch 2/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 1.8197 - root_mean_squared_error: 1.2425 - val_loss: 0.9642 - val_root_mean_squared_error: 0.9819\n","Epoch 3/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.6059 - root_mean_squared_error: 0.7779 - val_loss: 0.5912 - val_root_mean_squared_error: 0.7689\n","Epoch 4/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.5206 - root_mean_squared_error: 0.7213 - val_loss: 0.5124 - val_root_mean_squared_error: 0.7158\n","Epoch 5/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - loss: 0.4551 - root_mean_squared_error: 0.6743 - val_loss: 0.4641 - val_root_mean_squared_error: 0.6812\n","Epoch 6/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.4294 - root_mean_squared_error: 0.6550 - val_loss: 0.4410 - val_root_mean_squared_error: 0.6641\n","Epoch 7/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.3858 - root_mean_squared_error: 0.6210 - val_loss: 0.4245 - val_root_mean_squared_error: 0.6515\n","Epoch 8/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.4070 - root_mean_squared_error: 0.6376 - val_loss: 0.4136 - val_root_mean_squared_error: 0.6431\n","Epoch 9/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - loss: 0.3940 - root_mean_squared_error: 0.6276 - val_loss: 0.4143 - val_root_mean_squared_error: 0.6437\n","Epoch 10/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2ms/step - loss: 0.3718 - root_mean_squared_error: 0.6094 - val_loss: 0.4107 - val_root_mean_squared_error: 0.6408\n","Epoch 11/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.3667 - root_mean_squared_error: 0.6055 - val_loss: 0.3977 - val_root_mean_squared_error: 0.6306\n","Epoch 12/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.3564 - root_mean_squared_error: 0.5968 - val_loss: 0.3941 - val_root_mean_squared_error: 0.6277\n","Epoch 13/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.3485 - root_mean_squared_error: 0.5903 - val_loss: 0.3880 - val_root_mean_squared_error: 0.6229\n","Epoch 14/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - loss: 0.3672 - root_mean_squared_error: 0.6059 - val_loss: 0.3850 - val_root_mean_squared_error: 0.6205\n","Epoch 15/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.3457 - root_mean_squared_error: 0.5879 - val_loss: 0.3838 - val_root_mean_squared_error: 0.6195\n","Epoch 16/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - loss: 0.3564 - root_mean_squared_error: 0.5968 - val_loss: 0.3823 - val_root_mean_squared_error: 0.6183\n","Epoch 17/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.3406 - root_mean_squared_error: 0.5834 - val_loss: 0.3828 - val_root_mean_squared_error: 0.6187\n","Epoch 18/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - loss: 0.3436 - root_mean_squared_error: 0.5860 - val_loss: 0.4179 - val_root_mean_squared_error: 0.6465\n","Epoch 19/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 4ms/step - loss: 0.3565 - root_mean_squared_error: 0.5968 - val_loss: 0.3870 - val_root_mean_squared_error: 0.6221\n","Epoch 20/20\n","\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 2ms/step - loss: 0.3386 - root_mean_squared_error: 0.5815 - val_loss: 0.3767 - val_root_mean_squared_error: 0.6138\n"]}]},{"cell_type":"code","source":["# Graficar el historial de entrenamiento\n","dfHistory = pd.DataFrame(history.history)\n","dfHistory[['loss', 'val_loss', 'root_mean_squared_error',\n","'val_root_mean_squared_error']].plot(grid=True)\n","# dfHistory[['mean_absolute_percentage_error',\n","# 'val_mean_absolute_percentage_error']].plot(grid=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":447},"id":"ewqD-QwBVqPn","executionInfo":{"status":"ok","timestamp":1757270790724,"user_tz":300,"elapsed":477,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"dfc97dec-b0e4-4274-a9ab-57ebe70d2222"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["# Evaluar el modelo en el conjunto de entrenamiento\n","loss, RMSE, MAPE = model.evaluate(x_train, y_train)\n","print(\"Evaluar el modelo en el conjunto de entrenamiento\")\n","print(\"Loss train:\", loss)\n","print(\"root_mean_squared_error train:\", RMSE)\n","# The metrics were RootMeanSquaredError and MeanAbsoluteError, so MeanAbsolutePercentageError is not available\n","# print(\"mean_absolute_percentage_error train:\", MAPE)\n","\n","# Evaluar el modelo en el conjunto de validacion\n","loss, RMSE, MAPE = model.evaluate(x_valid, y_valid)\n","print (\"Evaluar el modelo en el conjunto de validacion\")\n","print(\"Loss valid:\", loss)\n","print(\"root_mean_squared_error valid:\", RMSE)\n","# The metrics were RootMeanSquaredError and MeanAbsoluteError, so MeanAbsolutePercentageError is not available\n","# print(\"mean_absolute_percentage_error valid:\", MAPE)\n","\n","# Evaluar el modelo en el conjunto de prueba\n","loss, RMSE, MAPE = model.evaluate(x_test, y_test)\n","print (\"Evaluar el modelo en el conjunto de prueba\")\n","print(\"Loss test:\", loss)\n","print(\"root_mean_squared_error test:\", RMSE)\n","# The metrics were RootMeanSquaredError and MeanAbsoluteError, so MeanAbsolutePercentageError is not available\n","# print(\"mean_absolute_percentage_error test:\", MAPE)"],"metadata":{"id":"Dso7nqYva7Ix","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1757270773419,"user_tz":300,"elapsed":1780,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"c1c889a3-c0c9-450f-db35-b356cb4c05f0"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m363/363\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - loss: 0.3435 - mean_absolute_error: 0.4164 - root_mean_squared_error: 0.5860\n","Evaluar el modelo en el conjunto de entrenamiento\n","Loss train: 0.3405802547931671\n","root_mean_squared_error train: 0.5835925340652466\n","\u001b[1m121/121\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - loss: 0.3504 - mean_absolute_error: 0.4226 - root_mean_squared_error: 0.5914\n","Evaluar el modelo en el conjunto de validacion\n","Loss valid: 0.37673383951187134\n","root_mean_squared_error valid: 0.6137864589691162\n","\u001b[1m162/162\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 2ms/step - loss: 0.3874 - mean_absolute_error: 0.4316 - root_mean_squared_error: 0.6205\n","Evaluar el modelo en el conjunto de prueba\n","Loss test: 0.36285650730133057\n","root_mean_squared_error test: 0.6023757457733154\n"]}]}]}