{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMf5Y2IbTqHLFFLhan4ifcB"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"MZcZvlGfOKgj","executionInfo":{"status":"ok","timestamp":1754750415802,"user_tz":300,"elapsed":69,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"c557160f-8a13-4104-ec60-2f2798b25e44"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      nombre  peso  altura\n","0  Alexander    69    1.78\n","1  alejandra    57    1.60\n","2      Dario    64    1.64"],"text/html":["\n","  <div id=\"df-7ee9d53b-e13f-400f-9105-33a7f0f61e66\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alexander</td>\n","      <td>69</td>\n","      <td>1.78</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>alejandra</td>\n","      <td>57</td>\n","      <td>1.60</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Dario</td>\n","      <td>64</td>\n","      <td>1.64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ee9d53b-e13f-400f-9105-33a7f0f61e66')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-7ee9d53b-e13f-400f-9105-33a7f0f61e66 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-7ee9d53b-e13f-400f-9105-33a7f0f61e66');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-259e58b2-8670-4fdd-8731-696b30067890\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-259e58b2-8670-4fdd-8731-696b30067890')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-259e58b2-8670-4fdd-8731-696b30067890 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_8dd8a8d1-784a-4933-b7a3-edf0cbf8a7ef\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_8dd8a8d1-784a-4933-b7a3-edf0cbf8a7ef button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Alexander\",\n          \"alejandra\",\n          \"Dario\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 57,\n        \"max\": 69,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          69,\n          57,\n          64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09451631252505217,\n        \"min\": 1.6,\n        \"max\": 1.78,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.78,\n          1.6,\n          1.64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}],"source":["import pandas as pd\n","lista_nombres = [\"Alexander\",\"alejandra\",\"Dario\"]\n","lista_pesos = [69,57,64]\n","lista_alturas =[1.78,1.6,1.64]\n","dicc_datos={\"nombre\": lista_nombres,\"peso\":lista_pesos,\"altura\":lista_alturas}\n","df = pd.DataFrame(dicc_datos)\n","df"]},{"cell_type":"code","source":["import pandas as pd\n","lista_nombres = [\"Alexander\",\"alejandra\",\"Dario\", \"alirio\", \"maria\", \" constanza\", \"catalina\", \"maria\",\"yolanda\",\"jhon\"]\n","lista_pesos = [69,57,64,69,85,54,70,80,90,65]\n","lista_alturas =[1.78,1.60,1.64,1.75,1.63,1.90,1.85,1.76,1.78,1.58]\n","dicc_datos={\"nombre\": lista_nombres,\"peso\":lista_pesos,\"altura\":lista_alturas}\n","df = pd.DataFrame(dicc_datos)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"RswpYcORRqXB","executionInfo":{"status":"ok","timestamp":1754750923171,"user_tz":300,"elapsed":40,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"bd5fb6da-5b25-46bf-ecfa-fe6ec4056b3d"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       nombre  peso  altura\n","0   Alexander    69    1.78\n","1   alejandra    57    1.60\n","2       Dario    64    1.64\n","3      alirio    69    1.75\n","4       maria    85    1.63\n","5   constanza    54    1.90\n","6    catalina    70    1.85\n","7       maria    80    1.76\n","8     yolanda    90    1.78\n","9        jhon    65    1.58"],"text/html":["\n","  <div id=\"df-9090ee61-247a-4b94-bbc6-172c9f11e048\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alexander</td>\n","      <td>69</td>\n","      <td>1.78</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>alejandra</td>\n","      <td>57</td>\n","      <td>1.60</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Dario</td>\n","      <td>64</td>\n","      <td>1.64</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>alirio</td>\n","      <td>69</td>\n","      <td>1.75</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>maria</td>\n","      <td>85</td>\n","      <td>1.63</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>constanza</td>\n","      <td>54</td>\n","      <td>1.90</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>catalina</td>\n","      <td>70</td>\n","      <td>1.85</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>maria</td>\n","      <td>80</td>\n","      <td>1.76</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>yolanda</td>\n","      <td>90</td>\n","      <td>1.78</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>jhon</td>\n","      <td>65</td>\n","      <td>1.58</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9090ee61-247a-4b94-bbc6-172c9f11e048')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9090ee61-247a-4b94-bbc6-172c9f11e048 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9090ee61-247a-4b94-bbc6-172c9f11e048');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-f101f882-d36a-4aa5-8846-fabb15e6195d\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f101f882-d36a-4aa5-8846-fabb15e6195d')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-f101f882-d36a-4aa5-8846-fabb15e6195d button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_2b677b66-6faf-499c-8ab6-b521dadc9af0\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_2b677b66-6faf-499c-8ab6-b521dadc9af0 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"yolanda\",\n          \"alejandra\",\n          \" constanza\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 54,\n        \"max\": 90,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          90,\n          57,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10904127658827184,\n        \"min\": 1.58,\n        \"max\": 1.9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.76,\n          1.6,\n          1.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df[\"imc\"]=df[\"peso\"]/(df[\"altura\"]**2)\n","df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"c2CIc_i2T6_J","executionInfo":{"status":"ok","timestamp":1754751124699,"user_tz":300,"elapsed":38,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"adb81263-6978-4484-ce57-8006c9c8f0b8"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       nombre  peso  altura        imc\n","0   Alexander    69    1.78  21.777553\n","1   alejandra    57    1.60  22.265625\n","2       Dario    64    1.64  23.795360\n","3      alirio    69    1.75  22.530612\n","4       maria    85    1.63  31.992171\n","5   constanza    54    1.90  14.958449\n","6    catalina    70    1.85  20.452885\n","7       maria    80    1.76  25.826446\n","8     yolanda    90    1.78  28.405504\n","9        jhon    65    1.58  26.037494"],"text/html":["\n","  <div id=\"df-07649243-a495-4fb3-8b5d-8909f20df7dd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","      <th>imc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alexander</td>\n","      <td>69</td>\n","      <td>1.78</td>\n","      <td>21.777553</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>alejandra</td>\n","      <td>57</td>\n","      <td>1.60</td>\n","      <td>22.265625</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Dario</td>\n","      <td>64</td>\n","      <td>1.64</td>\n","      <td>23.795360</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>alirio</td>\n","      <td>69</td>\n","      <td>1.75</td>\n","      <td>22.530612</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>maria</td>\n","      <td>85</td>\n","      <td>1.63</td>\n","      <td>31.992171</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>constanza</td>\n","      <td>54</td>\n","      <td>1.90</td>\n","      <td>14.958449</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>catalina</td>\n","      <td>70</td>\n","      <td>1.85</td>\n","      <td>20.452885</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>maria</td>\n","      <td>80</td>\n","      <td>1.76</td>\n","      <td>25.826446</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>yolanda</td>\n","      <td>90</td>\n","      <td>1.78</td>\n","      <td>28.405504</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>jhon</td>\n","      <td>65</td>\n","      <td>1.58</td>\n","      <td>26.037494</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-07649243-a495-4fb3-8b5d-8909f20df7dd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-07649243-a495-4fb3-8b5d-8909f20df7dd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-07649243-a495-4fb3-8b5d-8909f20df7dd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-01e139ad-869a-4eb0-b9e7-3501c5608422\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-01e139ad-869a-4eb0-b9e7-3501c5608422')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-01e139ad-869a-4eb0-b9e7-3501c5608422 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_208211bc-de92-4ae9-96ba-8080f07a855f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_208211bc-de92-4ae9-96ba-8080f07a855f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"yolanda\",\n          \"alejandra\",\n          \" constanza\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 54,\n        \"max\": 90,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          90,\n          57,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10904127658827184,\n        \"min\": 1.58,\n        \"max\": 1.9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.76,\n          1.6,\n          1.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.653161376408741,\n        \"min\": 14.958448753462605,\n        \"max\": 31.992171327486922,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          28.40550435551067,\n          22.265624999999996,\n          14.958448753462605\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":8}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":362},"id":"32163a09-5c1f-4829-87b9-d9f2a31e95e1","executionInfo":{"status":"ok","timestamp":1754751526863,"user_tz":300,"elapsed":49,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"3f31bb04-793c-45f5-b2f7-6189c27a34bf"},"source":["# Example classification based on 'bajo peso' and 'sobrepeso'\n","# Please provide the specific IMC ranges for 'bajo peso' and 'sobrepeso'\n","def clasificar_imc(imc):\n","    # Assuming a threshold for 'bajo peso', e.g., below 18.5\n","    if imc < 18.5:\n","        return 'Bajo peso'\n","    # Assuming a threshold for 'sobrepeso', e.g., above 24.9\n","    elif imc >= 24.9:\n","        return 'Sobrepeso'\n","    else:\n","        return 'Otro' # Or return None, or a different category like 'Peso normal'\n","\n","df['clasificar'] = df['imc'].apply(clasificar_imc)\n","display(df)"],"execution_count":9,"outputs":[{"output_type":"display_data","data":{"text/plain":["       nombre  peso  altura        imc clasificar\n","0   Alexander    69    1.78  21.777553       Otro\n","1   alejandra    57    1.60  22.265625       Otro\n","2       Dario    64    1.64  23.795360       Otro\n","3      alirio    69    1.75  22.530612       Otro\n","4       maria    85    1.63  31.992171  Sobrepeso\n","5   constanza    54    1.90  14.958449  Bajo peso\n","6    catalina    70    1.85  20.452885       Otro\n","7       maria    80    1.76  25.826446  Sobrepeso\n","8     yolanda    90    1.78  28.405504  Sobrepeso\n","9        jhon    65    1.58  26.037494  Sobrepeso"],"text/html":["\n","  <div id=\"df-d61697c6-0ab1-41ad-a8f1-b7d9d3ca045c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","      <th>imc</th>\n","      <th>clasificar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Alexander</td>\n","      <td>69</td>\n","      <td>1.78</td>\n","      <td>21.777553</td>\n","      <td>Otro</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>alejandra</td>\n","      <td>57</td>\n","      <td>1.60</td>\n","      <td>22.265625</td>\n","      <td>Otro</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Dario</td>\n","      <td>64</td>\n","      <td>1.64</td>\n","      <td>23.795360</td>\n","      <td>Otro</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>alirio</td>\n","      <td>69</td>\n","      <td>1.75</td>\n","      <td>22.530612</td>\n","      <td>Otro</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>maria</td>\n","      <td>85</td>\n","      <td>1.63</td>\n","      <td>31.992171</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>constanza</td>\n","      <td>54</td>\n","      <td>1.90</td>\n","      <td>14.958449</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>catalina</td>\n","      <td>70</td>\n","      <td>1.85</td>\n","      <td>20.452885</td>\n","      <td>Otro</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>maria</td>\n","      <td>80</td>\n","      <td>1.76</td>\n","      <td>25.826446</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>yolanda</td>\n","      <td>90</td>\n","      <td>1.78</td>\n","      <td>28.405504</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>jhon</td>\n","      <td>65</td>\n","      <td>1.58</td>\n","      <td>26.037494</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d61697c6-0ab1-41ad-a8f1-b7d9d3ca045c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d61697c6-0ab1-41ad-a8f1-b7d9d3ca045c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d61697c6-0ab1-41ad-a8f1-b7d9d3ca045c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-5c66960b-7a30-406d-af27-b1a6f70a99e2\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5c66960b-7a30-406d-af27-b1a6f70a99e2')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-5c66960b-7a30-406d-af27-b1a6f70a99e2 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_6d7771cd-a9f4-4bff-b4b3-9889d4a9c66f\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6d7771cd-a9f4-4bff-b4b3-9889d4a9c66f button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 10,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 9,\n        \"samples\": [\n          \"yolanda\",\n          \"alejandra\",\n          \" constanza\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11,\n        \"min\": 54,\n        \"max\": 90,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          90,\n          57,\n          70\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.10904127658827184,\n        \"min\": 1.58,\n        \"max\": 1.9,\n        \"num_unique_values\": 9,\n        \"samples\": [\n          1.76,\n          1.6,\n          1.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4.653161376408741,\n        \"min\": 14.958448753462605,\n        \"max\": 31.992171327486922,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          28.40550435551067,\n          22.265624999999996,\n          14.958448753462605\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clasificar\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Otro\",\n          \"Sobrepeso\",\n          \"Bajo peso\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"0ef1d784"},"source":["# Task\n","Genera una tabla con 100 datos inventados que incluya las columnas 'nombre', 'peso', 'altura', 'imc' y 'clasificar', donde 'imc' se calcule a partir de 'peso' y 'altura', y 'clasificar' categorice el 'imc' como 'bajo peso', 'normal', 'sobrepeso' u 'obesidad'."]},{"cell_type":"markdown","metadata":{"id":"89a99c5a"},"source":["## Generar datos inventados\n","\n","### Subtask:\n","Crear listas con 100 nombres, pesos y alturas aleatorias.\n"]},{"cell_type":"markdown","metadata":{"id":"20ca73b5"},"source":["**Reasoning**:\n","The subtask requires generating lists of random names, weights, and heights. This can be achieved by using the `random` and `string` modules and iterating 100 times to generate the desired number of random values for each list.\n","\n"]},{"cell_type":"code","metadata":{"id":"3cf46c97","executionInfo":{"status":"ok","timestamp":1754751801336,"user_tz":300,"elapsed":31,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["import random\n","import string\n","\n","lista_nombres = []\n","for _ in range(100):\n","    name_length = random.randint(5, 10)\n","    random_name = ''.join(random.choice(string.ascii_lowercase) for _ in range(name_length))\n","    lista_nombres.append(random_name)\n","\n","lista_pesos = []\n","for _ in range(100):\n","    random_peso = random.uniform(40, 120)\n","    lista_pesos.append(random_peso)\n","\n","lista_alturas = []\n","for _ in range(100):\n","    random_altura = random.uniform(1.40, 2.00)\n","    lista_alturas.append(random_altura)"],"execution_count":10,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"343d289f"},"source":["## Crear dataframe\n","\n","### Subtask:\n","Construir un DataFrame de pandas con los datos inventados.\n"]},{"cell_type":"markdown","metadata":{"id":"abdf9169"},"source":["**Reasoning**:\n","Create a dictionary from the generated lists and then create a pandas DataFrame from the dictionary and display the head of the DataFrame.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"36b99436","executionInfo":{"status":"ok","timestamp":1754751812964,"user_tz":300,"elapsed":53,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"064bc29d-1e4b-44f5-8779-da44a126b5f2"},"source":["dicc_datos = {\"nombre\": lista_nombres, \"peso\": lista_pesos, \"altura\": lista_alturas}\n","df = pd.DataFrame(dicc_datos)\n","display(df.head())"],"execution_count":11,"outputs":[{"output_type":"display_data","data":{"text/plain":["       nombre        peso    altura\n","0    afiizgiq   83.519704  1.408473\n","1  axwqfbhjxb   64.904546  1.908291\n","2   prgdfugdo  102.211785  1.938277\n","3  whbgrvwxrd   73.650822  1.502240\n","4    zzvgaasl   57.070636  1.416714"],"text/html":["\n","  <div id=\"df-5e775400-69ae-4142-a65c-0ab215893821\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>afiizgiq</td>\n","      <td>83.519704</td>\n","      <td>1.408473</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>axwqfbhjxb</td>\n","      <td>64.904546</td>\n","      <td>1.908291</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>prgdfugdo</td>\n","      <td>102.211785</td>\n","      <td>1.938277</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>whbgrvwxrd</td>\n","      <td>73.650822</td>\n","      <td>1.502240</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>zzvgaasl</td>\n","      <td>57.070636</td>\n","      <td>1.416714</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5e775400-69ae-4142-a65c-0ab215893821')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5e775400-69ae-4142-a65c-0ab215893821 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5e775400-69ae-4142-a65c-0ab215893821');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-34569064-78d4-4d2a-8486-a7be77b34b9c\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34569064-78d4-4d2a-8486-a7be77b34b9c')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-34569064-78d4-4d2a-8486-a7be77b34b9c button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"axwqfbhjxb\",\n          \"zzvgaasl\",\n          \"prgdfugdo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.53698674165884,\n        \"min\": 57.07063565056541,\n        \"max\": 102.21178457034611,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          64.90454577221617,\n          57.07063565056541,\n          102.21178457034611\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26610787579093975,\n        \"min\": 1.4084731261071843,\n        \"max\": 1.9382771449250433,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.90829136567433,\n          1.4167138539660806,\n          1.9382771449250433\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"c7e8ee25"},"source":["## Calcular imc\n","\n","### Subtask:\n","Añadir la columna 'imc' calculando el índice de masa corporal a partir de los pesos y alturas inventados.\n"]},{"cell_type":"markdown","metadata":{"id":"6f9ff4ca"},"source":["**Reasoning**:\n","Calculate the 'imc' column using the provided formula and add it to the DataFrame.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"452d7195","executionInfo":{"status":"ok","timestamp":1754751822626,"user_tz":300,"elapsed":63,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"aba669a3-60e5-437d-f4aa-df75da81f915"},"source":["df['imc'] = df['peso'] / (df['altura'] ** 2)\n","display(df.head())"],"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["       nombre        peso    altura        imc\n","0    afiizgiq   83.519704  1.408473  42.100942\n","1  axwqfbhjxb   64.904546  1.908291  17.823203\n","2   prgdfugdo  102.211785  1.938277  27.206284\n","3  whbgrvwxrd   73.650822  1.502240  32.636174\n","4    zzvgaasl   57.070636  1.416714  28.434685"],"text/html":["\n","  <div id=\"df-fb647606-f942-4fc2-8bac-89dea373eee1\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","      <th>imc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>afiizgiq</td>\n","      <td>83.519704</td>\n","      <td>1.408473</td>\n","      <td>42.100942</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>axwqfbhjxb</td>\n","      <td>64.904546</td>\n","      <td>1.908291</td>\n","      <td>17.823203</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>prgdfugdo</td>\n","      <td>102.211785</td>\n","      <td>1.938277</td>\n","      <td>27.206284</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>whbgrvwxrd</td>\n","      <td>73.650822</td>\n","      <td>1.502240</td>\n","      <td>32.636174</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>zzvgaasl</td>\n","      <td>57.070636</td>\n","      <td>1.416714</td>\n","      <td>28.434685</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fb647606-f942-4fc2-8bac-89dea373eee1')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-fb647606-f942-4fc2-8bac-89dea373eee1 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-fb647606-f942-4fc2-8bac-89dea373eee1');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-33419868-acb7-49a6-a2fe-03b813937ab7\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33419868-acb7-49a6-a2fe-03b813937ab7')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-33419868-acb7-49a6-a2fe-03b813937ab7 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"axwqfbhjxb\",\n          \"zzvgaasl\",\n          \"prgdfugdo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.53698674165884,\n        \"min\": 57.07063565056541,\n        \"max\": 102.21178457034611,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          64.90454577221617,\n          57.07063565056541,\n          102.21178457034611\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26610787579093975,\n        \"min\": 1.4084731261071843,\n        \"max\": 1.9382771449250433,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.90829136567433,\n          1.4167138539660806,\n          1.9382771449250433\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.821346222982012,\n        \"min\": 17.823202620905302,\n        \"max\": 42.10094228009675,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17.823202620905302,\n          28.43468542598661,\n          27.206283625531814\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"a3a4b96e"},"source":["## Clasificar imc\n","\n","### Subtask:\n","Añadir la columna 'clasificar' aplicando la lógica de clasificación de IMC definida anteriormente a los valores de IMC inventados.\n"]},{"cell_type":"markdown","metadata":{"id":"6ee55a1c"},"source":["**Reasoning**:\n","Define the `clasificar_imc` function and apply it to the 'imc' column to create the 'clasificar' column.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"3843c5ec","executionInfo":{"status":"ok","timestamp":1754751832016,"user_tz":300,"elapsed":66,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"82e2bc37-95fa-4d05-fb35-0444bb17a296"},"source":["def clasificar_imc(imc):\n","    if imc < 18.5:\n","        return 'Bajo peso'\n","    elif 18.5 <= imc < 24.9:\n","        return 'Normal'\n","    elif 24.9 <= imc < 29.9:\n","        return 'Sobrepeso'\n","    else:\n","        return 'Obesidad'\n","\n","df['clasificar'] = df['imc'].apply(clasificar_imc)\n","display(df.head())"],"execution_count":13,"outputs":[{"output_type":"display_data","data":{"text/plain":["       nombre        peso    altura        imc clasificar\n","0    afiizgiq   83.519704  1.408473  42.100942   Obesidad\n","1  axwqfbhjxb   64.904546  1.908291  17.823203  Bajo peso\n","2   prgdfugdo  102.211785  1.938277  27.206284  Sobrepeso\n","3  whbgrvwxrd   73.650822  1.502240  32.636174   Obesidad\n","4    zzvgaasl   57.070636  1.416714  28.434685  Sobrepeso"],"text/html":["\n","  <div id=\"df-63462add-075b-4164-a7ab-121ec987c27d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","      <th>imc</th>\n","      <th>clasificar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>afiizgiq</td>\n","      <td>83.519704</td>\n","      <td>1.408473</td>\n","      <td>42.100942</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>axwqfbhjxb</td>\n","      <td>64.904546</td>\n","      <td>1.908291</td>\n","      <td>17.823203</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>prgdfugdo</td>\n","      <td>102.211785</td>\n","      <td>1.938277</td>\n","      <td>27.206284</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>whbgrvwxrd</td>\n","      <td>73.650822</td>\n","      <td>1.502240</td>\n","      <td>32.636174</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>zzvgaasl</td>\n","      <td>57.070636</td>\n","      <td>1.416714</td>\n","      <td>28.434685</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-63462add-075b-4164-a7ab-121ec987c27d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-63462add-075b-4164-a7ab-121ec987c27d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-63462add-075b-4164-a7ab-121ec987c27d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-fe486293-cb24-4f6e-8551-b1aed68e4871\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fe486293-cb24-4f6e-8551-b1aed68e4871')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-fe486293-cb24-4f6e-8551-b1aed68e4871 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"axwqfbhjxb\",\n          \"zzvgaasl\",\n          \"prgdfugdo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.53698674165884,\n        \"min\": 57.07063565056541,\n        \"max\": 102.21178457034611,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          64.90454577221617,\n          57.07063565056541,\n          102.21178457034611\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26610787579093975,\n        \"min\": 1.4084731261071843,\n        \"max\": 1.9382771449250433,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.90829136567433,\n          1.4167138539660806,\n          1.9382771449250433\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.821346222982012,\n        \"min\": 17.823202620905302,\n        \"max\": 42.10094228009675,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17.823202620905302,\n          28.43468542598661,\n          27.206283625531814\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clasificar\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Obesidad\",\n          \"Bajo peso\",\n          \"Sobrepeso\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"82781f7e"},"source":["## Mostrar dataframe\n","\n","### Subtask:\n","Mostrar las primeras filas del nuevo DataFrame con 100 datos inventados.\n"]},{"cell_type":"markdown","metadata":{"id":"bbf78922"},"source":["**Reasoning**:\n","Display the first few rows of the DataFrame to show the generated data and the newly added 'imc' and 'clasificar' columns, completing the subtask.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"f68883cf","executionInfo":{"status":"ok","timestamp":1754751841252,"user_tz":300,"elapsed":73,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"2622716a-4164-43e2-92de-64b5cce4a45a"},"source":["display(df.head())"],"execution_count":14,"outputs":[{"output_type":"display_data","data":{"text/plain":["       nombre        peso    altura        imc clasificar\n","0    afiizgiq   83.519704  1.408473  42.100942   Obesidad\n","1  axwqfbhjxb   64.904546  1.908291  17.823203  Bajo peso\n","2   prgdfugdo  102.211785  1.938277  27.206284  Sobrepeso\n","3  whbgrvwxrd   73.650822  1.502240  32.636174   Obesidad\n","4    zzvgaasl   57.070636  1.416714  28.434685  Sobrepeso"],"text/html":["\n","  <div id=\"df-e7c7b144-e30a-4e0c-b0b0-8075fdb752bc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","      <th>imc</th>\n","      <th>clasificar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>afiizgiq</td>\n","      <td>83.519704</td>\n","      <td>1.408473</td>\n","      <td>42.100942</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>axwqfbhjxb</td>\n","      <td>64.904546</td>\n","      <td>1.908291</td>\n","      <td>17.823203</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>prgdfugdo</td>\n","      <td>102.211785</td>\n","      <td>1.938277</td>\n","      <td>27.206284</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>whbgrvwxrd</td>\n","      <td>73.650822</td>\n","      <td>1.502240</td>\n","      <td>32.636174</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>zzvgaasl</td>\n","      <td>57.070636</td>\n","      <td>1.416714</td>\n","      <td>28.434685</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e7c7b144-e30a-4e0c-b0b0-8075fdb752bc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e7c7b144-e30a-4e0c-b0b0-8075fdb752bc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e7c7b144-e30a-4e0c-b0b0-8075fdb752bc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-fc3a04b2-6edb-49c4-9c6f-a67937661f91\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fc3a04b2-6edb-49c4-9c6f-a67937661f91')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-fc3a04b2-6edb-49c4-9c6f-a67937661f91 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 5,\n        \"samples\": [\n          \"axwqfbhjxb\",\n          \"zzvgaasl\",\n          \"prgdfugdo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 17.53698674165884,\n        \"min\": 57.07063565056541,\n        \"max\": 102.21178457034611,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          64.90454577221617,\n          57.07063565056541,\n          102.21178457034611\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.26610787579093975,\n        \"min\": 1.4084731261071843,\n        \"max\": 1.9382771449250433,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1.90829136567433,\n          1.4167138539660806,\n          1.9382771449250433\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8.821346222982012,\n        \"min\": 17.823202620905302,\n        \"max\": 42.10094228009675,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          17.823202620905302,\n          28.43468542598661,\n          27.206283625531814\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clasificar\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Obesidad\",\n          \"Bajo peso\",\n          \"Sobrepeso\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"a332979a"},"source":["## Summary:\n","\n","### Data Analysis Key Findings\n","\n","*   A DataFrame was successfully created with 100 invented data entries, including 'nombre', 'peso', and 'altura' columns.\n","*   An 'imc' column was calculated for each entry using the formula: $\\text{peso} / (\\text{altura} \\text{\\textasciicircum} 2)$.\n","*   A 'clasificar' column was added, categorizing the 'imc' into 'Bajo peso', 'Normal', 'Sobrepeso', or 'Obesidad' based on predefined ranges.\n","\n","### Insights or Next Steps\n","\n","*   The generated DataFrame provides a synthetic dataset that can be used for further analysis or visualization related to BMI distribution and classification.\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"72b189f0","executionInfo":{"status":"ok","timestamp":1754751909250,"user_tz":300,"elapsed":110,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"690bb0bf-7843-4baf-f46b-f8395bf69e44"},"source":["import pandas as pd\n","\n","# Establecer opciones para mostrar todas las filas\n","pd.set_option('display.max_rows', None)\n","\n","# Establecer opciones para mostrar todas las columnas\n","pd.set_option('display.max_columns', None)\n","\n","# Mostrar el DataFrame completo\n","display(df)"],"execution_count":15,"outputs":[{"output_type":"display_data","data":{"text/plain":["        nombre        peso    altura        imc clasificar\n","0     afiizgiq   83.519704  1.408473  42.100942   Obesidad\n","1   axwqfbhjxb   64.904546  1.908291  17.823203  Bajo peso\n","2    prgdfugdo  102.211785  1.938277  27.206284  Sobrepeso\n","3   whbgrvwxrd   73.650822  1.502240  32.636174   Obesidad\n","4     zzvgaasl   57.070636  1.416714  28.434685  Sobrepeso\n","5    yasjjminp   65.606358  1.596127  25.752016  Sobrepeso\n","6   dqibkpvadl   56.955822  1.484179  25.856250  Sobrepeso\n","7   vcdcwgnlow   48.093843  1.471035  22.225100     Normal\n","8      vsdjzdq   68.648780  1.498587  30.568130   Obesidad\n","9     mzjkrctu   42.654593  1.788872  13.329299  Bajo peso\n","10   iyqvbjbqu   62.307375  1.862364  17.964302  Bajo peso\n","11    zcdkzgbq   49.679035  1.831895  14.803756  Bajo peso\n","12      cjdkpq   69.668973  1.664802  25.137043  Sobrepeso\n","13       xwuwb  118.653876  1.857264  34.398116   Obesidad\n","14      khgppt   51.031067  1.867997  14.624537  Bajo peso\n","15     zltsnhm  119.438583  1.832273  35.576598   Obesidad\n","16       djefh   69.837925  1.479706  31.896290   Obesidad\n","17       xvexr   88.090903  1.951543  23.129967     Normal\n","18   lsvgaebxd   68.514337  1.915947  18.664419     Normal\n","19  lvvkcbyzju  101.668889  1.552740  42.168760   Obesidad\n","20      ilgmat   65.634809  1.613046  25.225542  Sobrepeso\n","21       vmugv  100.552986  1.779779  31.744079   Obesidad\n","22  ajhejejijs   43.030530  1.934261  11.501287  Bajo peso\n","23       hswfs   40.558247  1.942016  10.754092  Bajo peso\n","24       kpdtj   95.510524  1.400950  48.663807   Obesidad\n","25     ofvqfso   55.355177  1.832690  16.480879  Bajo peso\n","26  gzgecxhphr   73.908061  1.478731  33.799727   Obesidad\n","27      tvhabe  107.123450  1.501749  47.499574   Obesidad\n","28    rjakxzqy   91.128629  1.810748  27.793201  Sobrepeso\n","29      wtimiq   44.442256  1.987716  11.248320  Bajo peso\n","30   entwovhcb  103.141397  1.710525  35.251237   Obesidad\n","31     ykmqrnz   53.833720  1.516151  23.419059     Normal\n","32  bjawfhsuok  101.016942  1.403759  51.263619   Obesidad\n","33    qrsezlro  112.751024  1.705545  38.760946   Obesidad\n","34    zrmjqexs   54.187529  1.645520  20.012111     Normal\n","35    uflexdns   62.587984  1.500900  27.783528  Sobrepeso\n","36      hdrxjj  115.581349  1.948264  30.450331   Obesidad\n","37    kajjhlkp   55.099376  1.684916  19.408416     Normal\n","38       pokrd   88.865256  1.972346  22.843665     Normal\n","39     zhrrepr   62.081191  1.511424  27.176102  Sobrepeso\n","40   auwnvwfzc   89.767638  1.977391  22.958040     Normal\n","41      pvvzvq   78.083095  1.998660  19.546955     Normal\n","42       mloat   76.784356  1.901247  21.242023     Normal\n","43      oecove   83.566723  1.550022  34.782261   Obesidad\n","44    lyhjwelp   97.456135  1.536706  41.269363   Obesidad\n","45     skjbayz   52.996661  1.939749  14.085018  Bajo peso\n","46   yygeskgjk   60.374865  1.575285  24.329759     Normal\n","47    hhmaxkuj   46.191687  1.846542  13.547066  Bajo peso\n","48      xinmnd   93.396380  1.673871  33.333896   Obesidad\n","49  bangbonmpf   75.366697  1.923763  20.364620     Normal\n","50     mdwitmn   67.235303  1.926657  18.112930  Bajo peso\n","51       omxtz   54.141827  1.980201  13.807476  Bajo peso\n","52   equngteje  112.158384  1.773189  35.671537   Obesidad\n","53   yawvrepdo   76.428009  1.447984  36.452327   Obesidad\n","54      agwwsy   87.667013  1.651360  32.147904   Obesidad\n","55    tllnxslk  105.499250  1.987400  26.710300  Sobrepeso\n","56       lwpee   84.184017  1.631890  31.611717   Obesidad\n","57       hdfqf  103.237129  1.781480  32.529241   Obesidad\n","58       zmqod  107.648844  1.450582  51.159303   Obesidad\n","59     jbtwmqt   54.773539  1.631739  20.571662     Normal\n","60    ortzxwop   51.679177  1.953105  13.547660  Bajo peso\n","61    eicekccr   63.218415  1.983875  16.062567  Bajo peso\n","62   nivhtsval  114.155535  1.839085  33.751514   Obesidad\n","63       qshnc  103.847024  1.680185  36.785759   Obesidad\n","64     utdczpb   85.025403  1.770236  27.132273  Sobrepeso\n","65     qduayxg   67.004163  1.619709  25.540415  Sobrepeso\n","66  carzlndjfh   42.951242  1.536849  18.184998  Bajo peso\n","67   jkvveiodu  112.363505  1.888454  31.507388   Obesidad\n","68      cpsjpv   48.697924  1.693649  16.977097  Bajo peso\n","69       gbbfv   97.812453  1.812487  29.774481  Sobrepeso\n","70      mjsblv   46.015085  1.964119  11.927915  Bajo peso\n","71     lrwspto   89.634251  1.614849  34.372430   Obesidad\n","72  bxliclspsg   43.713828  1.487739  19.749916     Normal\n","73     tcsferv  105.452383  1.535620  44.718655   Obesidad\n","74     tnwnaxd   69.550403  1.484125  31.576125   Obesidad\n","75  qrjzwausch   80.033865  1.980898  20.396207     Normal\n","76      vcxves  110.385152  1.896708  30.683828   Obesidad\n","77  qrjedsfymu  113.874748  1.529518  48.676387   Obesidad\n","78      djzhhf   69.004957  1.842686  20.322514     Normal\n","79     numjxsz  116.964734  1.685547  41.169260   Obesidad\n","80     dqsxcnz   54.359034  1.860251  15.708281  Bajo peso\n","81     glsqsof   67.410615  1.431878  32.878822   Obesidad\n","82    nrcwuhtv   51.473065  1.533307  21.893840     Normal\n","83      dfqcfy   71.491581  1.506966  31.480959   Obesidad\n","84    mtrikpbu   45.606818  1.579647  18.277192  Bajo peso\n","85    uneqlxgs   42.809941  1.784452  13.444198  Bajo peso\n","86       zmurz  109.716805  1.611547  42.246154   Obesidad\n","87      scprcm   40.013639  1.555259  16.542548  Bajo peso\n","88  fwfbntyakc   86.495308  1.865644  24.850482     Normal\n","89      cldebv   75.368703  1.812389  22.945000     Normal\n","90   wfjoofyeo   40.711808  1.606285  15.778852  Bajo peso\n","91      ebpvfa   82.459722  1.979152  21.051529     Normal\n","92     azfykxj   76.421684  1.473420  35.201692   Obesidad\n","93       oqout  116.873570  1.495777  52.237560   Obesidad\n","94      dwoemy   41.276635  1.521248  17.836267  Bajo peso\n","95      wtnfzq   66.059807  1.691381  23.091628     Normal\n","96    wnxwwjvo   41.717028  1.855124  12.121807  Bajo peso\n","97   cxiguqmaq   81.427035  1.960300  21.189628     Normal\n","98      hgzzfp   65.200087  1.981805  16.600703  Bajo peso\n","99  ndmafcmybh   65.809404  1.545783  27.541715  Sobrepeso"],"text/html":["\n","  <div id=\"df-cf61ef24-fb81-46ba-96f0-d95dce6f7b6c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>nombre</th>\n","      <th>peso</th>\n","      <th>altura</th>\n","      <th>imc</th>\n","      <th>clasificar</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>afiizgiq</td>\n","      <td>83.519704</td>\n","      <td>1.408473</td>\n","      <td>42.100942</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>axwqfbhjxb</td>\n","      <td>64.904546</td>\n","      <td>1.908291</td>\n","      <td>17.823203</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>prgdfugdo</td>\n","      <td>102.211785</td>\n","      <td>1.938277</td>\n","      <td>27.206284</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>whbgrvwxrd</td>\n","      <td>73.650822</td>\n","      <td>1.502240</td>\n","      <td>32.636174</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>zzvgaasl</td>\n","      <td>57.070636</td>\n","      <td>1.416714</td>\n","      <td>28.434685</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>yasjjminp</td>\n","      <td>65.606358</td>\n","      <td>1.596127</td>\n","      <td>25.752016</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>dqibkpvadl</td>\n","      <td>56.955822</td>\n","      <td>1.484179</td>\n","      <td>25.856250</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>vcdcwgnlow</td>\n","      <td>48.093843</td>\n","      <td>1.471035</td>\n","      <td>22.225100</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>vsdjzdq</td>\n","      <td>68.648780</td>\n","      <td>1.498587</td>\n","      <td>30.568130</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>mzjkrctu</td>\n","      <td>42.654593</td>\n","      <td>1.788872</td>\n","      <td>13.329299</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>iyqvbjbqu</td>\n","      <td>62.307375</td>\n","      <td>1.862364</td>\n","      <td>17.964302</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>zcdkzgbq</td>\n","      <td>49.679035</td>\n","      <td>1.831895</td>\n","      <td>14.803756</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>cjdkpq</td>\n","      <td>69.668973</td>\n","      <td>1.664802</td>\n","      <td>25.137043</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>xwuwb</td>\n","      <td>118.653876</td>\n","      <td>1.857264</td>\n","      <td>34.398116</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>khgppt</td>\n","      <td>51.031067</td>\n","      <td>1.867997</td>\n","      <td>14.624537</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>zltsnhm</td>\n","      <td>119.438583</td>\n","      <td>1.832273</td>\n","      <td>35.576598</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>djefh</td>\n","      <td>69.837925</td>\n","      <td>1.479706</td>\n","      <td>31.896290</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>xvexr</td>\n","      <td>88.090903</td>\n","      <td>1.951543</td>\n","      <td>23.129967</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>lsvgaebxd</td>\n","      <td>68.514337</td>\n","      <td>1.915947</td>\n","      <td>18.664419</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>lvvkcbyzju</td>\n","      <td>101.668889</td>\n","      <td>1.552740</td>\n","      <td>42.168760</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>ilgmat</td>\n","      <td>65.634809</td>\n","      <td>1.613046</td>\n","      <td>25.225542</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>vmugv</td>\n","      <td>100.552986</td>\n","      <td>1.779779</td>\n","      <td>31.744079</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>ajhejejijs</td>\n","      <td>43.030530</td>\n","      <td>1.934261</td>\n","      <td>11.501287</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>hswfs</td>\n","      <td>40.558247</td>\n","      <td>1.942016</td>\n","      <td>10.754092</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>kpdtj</td>\n","      <td>95.510524</td>\n","      <td>1.400950</td>\n","      <td>48.663807</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>ofvqfso</td>\n","      <td>55.355177</td>\n","      <td>1.832690</td>\n","      <td>16.480879</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>gzgecxhphr</td>\n","      <td>73.908061</td>\n","      <td>1.478731</td>\n","      <td>33.799727</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>tvhabe</td>\n","      <td>107.123450</td>\n","      <td>1.501749</td>\n","      <td>47.499574</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>rjakxzqy</td>\n","      <td>91.128629</td>\n","      <td>1.810748</td>\n","      <td>27.793201</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>wtimiq</td>\n","      <td>44.442256</td>\n","      <td>1.987716</td>\n","      <td>11.248320</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>entwovhcb</td>\n","      <td>103.141397</td>\n","      <td>1.710525</td>\n","      <td>35.251237</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>ykmqrnz</td>\n","      <td>53.833720</td>\n","      <td>1.516151</td>\n","      <td>23.419059</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>bjawfhsuok</td>\n","      <td>101.016942</td>\n","      <td>1.403759</td>\n","      <td>51.263619</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>qrsezlro</td>\n","      <td>112.751024</td>\n","      <td>1.705545</td>\n","      <td>38.760946</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>zrmjqexs</td>\n","      <td>54.187529</td>\n","      <td>1.645520</td>\n","      <td>20.012111</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>uflexdns</td>\n","      <td>62.587984</td>\n","      <td>1.500900</td>\n","      <td>27.783528</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>hdrxjj</td>\n","      <td>115.581349</td>\n","      <td>1.948264</td>\n","      <td>30.450331</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>kajjhlkp</td>\n","      <td>55.099376</td>\n","      <td>1.684916</td>\n","      <td>19.408416</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>pokrd</td>\n","      <td>88.865256</td>\n","      <td>1.972346</td>\n","      <td>22.843665</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>zhrrepr</td>\n","      <td>62.081191</td>\n","      <td>1.511424</td>\n","      <td>27.176102</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>auwnvwfzc</td>\n","      <td>89.767638</td>\n","      <td>1.977391</td>\n","      <td>22.958040</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>pvvzvq</td>\n","      <td>78.083095</td>\n","      <td>1.998660</td>\n","      <td>19.546955</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>mloat</td>\n","      <td>76.784356</td>\n","      <td>1.901247</td>\n","      <td>21.242023</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>oecove</td>\n","      <td>83.566723</td>\n","      <td>1.550022</td>\n","      <td>34.782261</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>lyhjwelp</td>\n","      <td>97.456135</td>\n","      <td>1.536706</td>\n","      <td>41.269363</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>skjbayz</td>\n","      <td>52.996661</td>\n","      <td>1.939749</td>\n","      <td>14.085018</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>yygeskgjk</td>\n","      <td>60.374865</td>\n","      <td>1.575285</td>\n","      <td>24.329759</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>hhmaxkuj</td>\n","      <td>46.191687</td>\n","      <td>1.846542</td>\n","      <td>13.547066</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>48</th>\n","      <td>xinmnd</td>\n","      <td>93.396380</td>\n","      <td>1.673871</td>\n","      <td>33.333896</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>bangbonmpf</td>\n","      <td>75.366697</td>\n","      <td>1.923763</td>\n","      <td>20.364620</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>50</th>\n","      <td>mdwitmn</td>\n","      <td>67.235303</td>\n","      <td>1.926657</td>\n","      <td>18.112930</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>51</th>\n","      <td>omxtz</td>\n","      <td>54.141827</td>\n","      <td>1.980201</td>\n","      <td>13.807476</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>52</th>\n","      <td>equngteje</td>\n","      <td>112.158384</td>\n","      <td>1.773189</td>\n","      <td>35.671537</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>53</th>\n","      <td>yawvrepdo</td>\n","      <td>76.428009</td>\n","      <td>1.447984</td>\n","      <td>36.452327</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>54</th>\n","      <td>agwwsy</td>\n","      <td>87.667013</td>\n","      <td>1.651360</td>\n","      <td>32.147904</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>55</th>\n","      <td>tllnxslk</td>\n","      <td>105.499250</td>\n","      <td>1.987400</td>\n","      <td>26.710300</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>56</th>\n","      <td>lwpee</td>\n","      <td>84.184017</td>\n","      <td>1.631890</td>\n","      <td>31.611717</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>57</th>\n","      <td>hdfqf</td>\n","      <td>103.237129</td>\n","      <td>1.781480</td>\n","      <td>32.529241</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>58</th>\n","      <td>zmqod</td>\n","      <td>107.648844</td>\n","      <td>1.450582</td>\n","      <td>51.159303</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>59</th>\n","      <td>jbtwmqt</td>\n","      <td>54.773539</td>\n","      <td>1.631739</td>\n","      <td>20.571662</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>60</th>\n","      <td>ortzxwop</td>\n","      <td>51.679177</td>\n","      <td>1.953105</td>\n","      <td>13.547660</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>61</th>\n","      <td>eicekccr</td>\n","      <td>63.218415</td>\n","      <td>1.983875</td>\n","      <td>16.062567</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>62</th>\n","      <td>nivhtsval</td>\n","      <td>114.155535</td>\n","      <td>1.839085</td>\n","      <td>33.751514</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>63</th>\n","      <td>qshnc</td>\n","      <td>103.847024</td>\n","      <td>1.680185</td>\n","      <td>36.785759</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>64</th>\n","      <td>utdczpb</td>\n","      <td>85.025403</td>\n","      <td>1.770236</td>\n","      <td>27.132273</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>65</th>\n","      <td>qduayxg</td>\n","      <td>67.004163</td>\n","      <td>1.619709</td>\n","      <td>25.540415</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>66</th>\n","      <td>carzlndjfh</td>\n","      <td>42.951242</td>\n","      <td>1.536849</td>\n","      <td>18.184998</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>67</th>\n","      <td>jkvveiodu</td>\n","      <td>112.363505</td>\n","      <td>1.888454</td>\n","      <td>31.507388</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>68</th>\n","      <td>cpsjpv</td>\n","      <td>48.697924</td>\n","      <td>1.693649</td>\n","      <td>16.977097</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>69</th>\n","      <td>gbbfv</td>\n","      <td>97.812453</td>\n","      <td>1.812487</td>\n","      <td>29.774481</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","    <tr>\n","      <th>70</th>\n","      <td>mjsblv</td>\n","      <td>46.015085</td>\n","      <td>1.964119</td>\n","      <td>11.927915</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>71</th>\n","      <td>lrwspto</td>\n","      <td>89.634251</td>\n","      <td>1.614849</td>\n","      <td>34.372430</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>72</th>\n","      <td>bxliclspsg</td>\n","      <td>43.713828</td>\n","      <td>1.487739</td>\n","      <td>19.749916</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>73</th>\n","      <td>tcsferv</td>\n","      <td>105.452383</td>\n","      <td>1.535620</td>\n","      <td>44.718655</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>74</th>\n","      <td>tnwnaxd</td>\n","      <td>69.550403</td>\n","      <td>1.484125</td>\n","      <td>31.576125</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>75</th>\n","      <td>qrjzwausch</td>\n","      <td>80.033865</td>\n","      <td>1.980898</td>\n","      <td>20.396207</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>76</th>\n","      <td>vcxves</td>\n","      <td>110.385152</td>\n","      <td>1.896708</td>\n","      <td>30.683828</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>77</th>\n","      <td>qrjedsfymu</td>\n","      <td>113.874748</td>\n","      <td>1.529518</td>\n","      <td>48.676387</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>78</th>\n","      <td>djzhhf</td>\n","      <td>69.004957</td>\n","      <td>1.842686</td>\n","      <td>20.322514</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>79</th>\n","      <td>numjxsz</td>\n","      <td>116.964734</td>\n","      <td>1.685547</td>\n","      <td>41.169260</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>80</th>\n","      <td>dqsxcnz</td>\n","      <td>54.359034</td>\n","      <td>1.860251</td>\n","      <td>15.708281</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>81</th>\n","      <td>glsqsof</td>\n","      <td>67.410615</td>\n","      <td>1.431878</td>\n","      <td>32.878822</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>82</th>\n","      <td>nrcwuhtv</td>\n","      <td>51.473065</td>\n","      <td>1.533307</td>\n","      <td>21.893840</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>83</th>\n","      <td>dfqcfy</td>\n","      <td>71.491581</td>\n","      <td>1.506966</td>\n","      <td>31.480959</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>84</th>\n","      <td>mtrikpbu</td>\n","      <td>45.606818</td>\n","      <td>1.579647</td>\n","      <td>18.277192</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>85</th>\n","      <td>uneqlxgs</td>\n","      <td>42.809941</td>\n","      <td>1.784452</td>\n","      <td>13.444198</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>86</th>\n","      <td>zmurz</td>\n","      <td>109.716805</td>\n","      <td>1.611547</td>\n","      <td>42.246154</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>87</th>\n","      <td>scprcm</td>\n","      <td>40.013639</td>\n","      <td>1.555259</td>\n","      <td>16.542548</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>88</th>\n","      <td>fwfbntyakc</td>\n","      <td>86.495308</td>\n","      <td>1.865644</td>\n","      <td>24.850482</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>89</th>\n","      <td>cldebv</td>\n","      <td>75.368703</td>\n","      <td>1.812389</td>\n","      <td>22.945000</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>90</th>\n","      <td>wfjoofyeo</td>\n","      <td>40.711808</td>\n","      <td>1.606285</td>\n","      <td>15.778852</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>91</th>\n","      <td>ebpvfa</td>\n","      <td>82.459722</td>\n","      <td>1.979152</td>\n","      <td>21.051529</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>92</th>\n","      <td>azfykxj</td>\n","      <td>76.421684</td>\n","      <td>1.473420</td>\n","      <td>35.201692</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>93</th>\n","      <td>oqout</td>\n","      <td>116.873570</td>\n","      <td>1.495777</td>\n","      <td>52.237560</td>\n","      <td>Obesidad</td>\n","    </tr>\n","    <tr>\n","      <th>94</th>\n","      <td>dwoemy</td>\n","      <td>41.276635</td>\n","      <td>1.521248</td>\n","      <td>17.836267</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>95</th>\n","      <td>wtnfzq</td>\n","      <td>66.059807</td>\n","      <td>1.691381</td>\n","      <td>23.091628</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>96</th>\n","      <td>wnxwwjvo</td>\n","      <td>41.717028</td>\n","      <td>1.855124</td>\n","      <td>12.121807</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>97</th>\n","      <td>cxiguqmaq</td>\n","      <td>81.427035</td>\n","      <td>1.960300</td>\n","      <td>21.189628</td>\n","      <td>Normal</td>\n","    </tr>\n","    <tr>\n","      <th>98</th>\n","      <td>hgzzfp</td>\n","      <td>65.200087</td>\n","      <td>1.981805</td>\n","      <td>16.600703</td>\n","      <td>Bajo peso</td>\n","    </tr>\n","    <tr>\n","      <th>99</th>\n","      <td>ndmafcmybh</td>\n","      <td>65.809404</td>\n","      <td>1.545783</td>\n","      <td>27.541715</td>\n","      <td>Sobrepeso</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cf61ef24-fb81-46ba-96f0-d95dce6f7b6c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cf61ef24-fb81-46ba-96f0-d95dce6f7b6c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cf61ef24-fb81-46ba-96f0-d95dce6f7b6c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-41ee79bc-9756-4500-bb33-5b05beaeac96\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-41ee79bc-9756-4500-bb33-5b05beaeac96')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-41ee79bc-9756-4500-bb33-5b05beaeac96 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_543e0f05-5756-459d-be6e-fe9e0dabb430\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_543e0f05-5756-459d-be6e-fe9e0dabb430 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"nombre\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 100,\n        \"samples\": [\n          \"dfqcfy\",\n          \"yawvrepdo\",\n          \"mjsblv\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 23.668053206367045,\n        \"min\": 40.01363879285329,\n        \"max\": 119.43858269570212,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          71.49158070773284,\n          76.4280093577849,\n          46.01508457592564\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1888329804935859,\n        \"min\": 1.4009498064714407,\n        \"max\": 1.9986601697545072,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          1.5069660631624315,\n          1.4479835978959115,\n          1.9641191892209022\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10.230972594337588,\n        \"min\": 10.754092022823153,\n        \"max\": 52.23756043561651,\n        \"num_unique_values\": 100,\n        \"samples\": [\n          31.480959116761824,\n          36.45232748710397,\n          11.927915319857288\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"clasificar\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Bajo peso\",\n          \"Normal\",\n          \"Obesidad\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":143},"id":"312a2cdf","executionInfo":{"status":"ok","timestamp":1754753044514,"user_tz":300,"elapsed":37,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"b140f548-ccfd-43d6-ba9e-744058bd2103"},"source":["# Ejemplo de Matriz de Correlación\n","# Selecciona las columnas numéricas para la matriz de correlación\n","df_numeric = df[['peso', 'altura', 'imc']]\n","\n","# Calcula la matriz de correlación\n","correlation_matrix = df_numeric.corr()\n","\n","# Muestra la matriz de correlación\n","display(correlation_matrix)"],"execution_count":16,"outputs":[{"output_type":"display_data","data":{"text/plain":["            peso    altura       imc\n","peso    1.000000  0.006265  0.797686\n","altura  0.006265  1.000000 -0.566805\n","imc     0.797686 -0.566805  1.000000"],"text/html":["\n","  <div id=\"df-f14b64f8-3af2-40f7-8d4d-5965586cbcd0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>peso</th>\n","      <th>altura</th>\n","      <th>imc</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>peso</th>\n","      <td>1.000000</td>\n","      <td>0.006265</td>\n","      <td>0.797686</td>\n","    </tr>\n","    <tr>\n","      <th>altura</th>\n","      <td>0.006265</td>\n","      <td>1.000000</td>\n","      <td>-0.566805</td>\n","    </tr>\n","    <tr>\n","      <th>imc</th>\n","      <td>0.797686</td>\n","      <td>-0.566805</td>\n","      <td>1.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f14b64f8-3af2-40f7-8d4d-5965586cbcd0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-f14b64f8-3af2-40f7-8d4d-5965586cbcd0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-f14b64f8-3af2-40f7-8d4d-5965586cbcd0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-718a6013-bc51-43e6-b540-411ca23e4062\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-718a6013-bc51-43e6-b540-411ca23e4062')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-718a6013-bc51-43e6-b540-411ca23e4062 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_9b1e78f6-4beb-449f-9f13-b6a2b0325e50\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('correlation_matrix')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_9b1e78f6-4beb-449f-9f13-b6a2b0325e50 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('correlation_matrix');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"correlation_matrix","summary":"{\n  \"name\": \"correlation_matrix\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"peso\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.5251648193349637,\n        \"min\": 0.0062648442457114185,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          1.0,\n          0.0062648442457114185,\n          0.7976864792411974\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"altura\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.792758490131341,\n        \"min\": -0.5668049130465784,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.0062648442457114185,\n          1.0,\n          -0.5668049130465784\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"imc\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.8522172215126211,\n        \"min\": -0.5668049130465784,\n        \"max\": 1.0,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0.7976864792411974,\n          -0.5668049130465784,\n          1.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"aa69d5af","executionInfo":{"status":"ok","timestamp":1754753137848,"user_tz":300,"elapsed":1998,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"52889fa2-2289-47bf-e7b6-346b74954adf"},"source":["from sklearn.metrics import confusion_matrix\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","\n","# Para demostrar la matriz de confusión, necesitamos valores \"reales\" y \"predichos\".\n","# Usaremos la columna 'clasificar' como valores \"reales\".\n","# Para los valores \"predichos\", crearemos una columna simple con una lógica ligeramente diferente.\n","# Esto es solo para fines de demostración de la matriz de confusión.\n","\n","# Creamos una columna de \"predicciones\" simple para el ejemplo\n","# Supongamos que nuestra \"predicción\" es 'Sobrepeso' si el IMC es >= 28, de lo contrario 'Otro'.\n","# Esto es solo un ejemplo y no representa un modelo de clasificación real.\n","df['clasificar_predicho'] = df['imc'].apply(lambda x: 'Sobrepeso' if x >= 28 else ('Bajo peso' if x < 18 else 'Otro'))\n","\n","\n","# Asegurarse de que ambas columnas tengan las mismas categorías para la matriz de confusión\n","# Obtener todas las categorías únicas de ambas columnas\n","all_categories = sorted(list(set(df['clasificar'].unique()).union(set(df['clasificar_predicho'].unique()))))\n","\n","# Calcular la matriz de confusión\n","# Usamos 'labels' para asegurar que todas las categorías posibles estén representadas, incluso si no aparecen en las predicciones o valores reales de este subconjunto.\n","cm = confusion_matrix(df['clasificar'], df['clasificar_predicho'], labels=all_categories)\n","\n","# Mostrar la matriz de confusión usando seaborn y matplotlib\n","plt.figure(figsize=(8, 6))\n","sns.heatmap(cm, annot=True, fmt='d', cmap='Blues', xticklabels=all_categories, yticklabels=all_categories)\n","plt.xlabel('Predicho')\n","plt.ylabel('Real')\n","plt.title('Matriz de Confusión')\n","plt.show()"],"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 800x600 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]}]}