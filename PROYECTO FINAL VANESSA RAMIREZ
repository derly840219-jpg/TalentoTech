{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPMZ2xB8b+Yv0kXh1+jR1F4"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["import pandas as pd\n","import numpy as np"],"metadata":{"id":"20f5qDEBaPUX","executionInfo":{"status":"ok","timestamp":1758242434612,"user_tz":300,"elapsed":9,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","execution_count":26,"metadata":{"id":"7JINqKWuulJu","executionInfo":{"status":"ok","timestamp":1758242493594,"user_tz":300,"elapsed":22338,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"colab":{"base_uri":"https://localhost:8080/","height":635},"outputId":"b1701634-6d6c-4f76-c234-6f6e947e637a"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]},{"output_type":"display_data","data":{"text/plain":["     Accident_ID       Date   Time Day_of_Week Weather Road_Type  \\\n","0              1 2022-01-01  03:50      Sunday  Cloudy     Urban   \n","1              2 2022-01-02  03:46    Thursday   Rainy     Urban   \n","2              3 2022-01-03  03:04      Friday  Cloudy     Rural   \n","3              4 2022-01-04  15:40      Sunday   Sunny   Highway   \n","4              5 2022-01-05  19:23   Wednesday   Sunny     Urban   \n","..           ...        ...    ...         ...     ...       ...   \n","995          996 2024-09-22  22:51    Saturday   Rainy   Highway   \n","996          997 2024-09-23  14:46      Monday   Rainy   Highway   \n","997          998 2024-09-24  02:07      Sunday   Sunny     Rural   \n","998          999 2024-09-25  16:08    Thursday   Sunny     Rural   \n","999         1000 2024-09-26  18:38    Saturday   Foggy   Highway   \n","\n","     Vehicles_Involved  Injuries  Fatalities  Average_Speed  ...  \\\n","0                    1         2           2          48.28  ...   \n","1                    1         1           2          61.86  ...   \n","2                    2         4           1          49.25  ...   \n","3                    1         4           2          53.22  ...   \n","4                    2         4           2          49.38  ...   \n","..                 ...       ...         ...            ...  ...   \n","995                  4         3           0         111.15  ...   \n","996                  1         0           0          42.15  ...   \n","997                  2         3           2          25.62  ...   \n","998                  1         5           1          45.56  ...   \n","999                  4         6           0          72.76  ...   \n","\n","     Injuries_per_Vehicle  Fatalities_per_Vehicle  Log_Damage_Cost  Year  \\\n","0                    2.00                     2.0         9.790570  2022   \n","1                    1.00                     2.0        10.638720  2022   \n","2                    2.00                     0.5        10.123612  2022   \n","3                    4.00                     2.0        10.728251  2022   \n","4                    2.00                     1.0        10.745867  2022   \n","..                    ...                     ...              ...   ...   \n","995                  0.75                     0.0        10.441336  2024   \n","996                  0.00                     0.0         9.286063  2024   \n","997                  1.50                     1.0        10.597858  2024   \n","998                  5.00                     1.0        10.602899  2024   \n","999                  1.50                     0.0         9.954962  2024   \n","\n","     Month  Day  Hour  Weekend  Over_Speeding  Speed_Squared  \n","0        1    1     3        1              0      2330.9584  \n","1        1    2     3        0              1      3826.6596  \n","2        1    3     3        0              0      2425.5625  \n","3        1    4    15        1              0      2832.3684  \n","4        1    5    19        0              0      2438.3844  \n","..     ...  ...   ...      ...            ...            ...  \n","995      9   22    22        1              1     12354.3225  \n","996      9   23    14        0              0      1776.6225  \n","997      9   24     2        1              0       656.3844  \n","998      9   25    16        0              0      2075.7136  \n","999      9   26    18        1              1      5294.0176  \n","\n","[1000 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-594f9324-3713-495f-862f-907b6b9052e4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Accident_ID</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Day_of_Week</th>\n","      <th>Weather</th>\n","      <th>Road_Type</th>\n","      <th>Vehicles_Involved</th>\n","      <th>Injuries</th>\n","      <th>Fatalities</th>\n","      <th>Average_Speed</th>\n","      <th>...</th>\n","      <th>Injuries_per_Vehicle</th>\n","      <th>Fatalities_per_Vehicle</th>\n","      <th>Log_Damage_Cost</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Hour</th>\n","      <th>Weekend</th>\n","      <th>Over_Speeding</th>\n","      <th>Speed_Squared</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2022-01-01</td>\n","      <td>03:50</td>\n","      <td>Sunday</td>\n","      <td>Cloudy</td>\n","      <td>Urban</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>48.28</td>\n","      <td>...</td>\n","      <td>2.00</td>\n","      <td>2.0</td>\n","      <td>9.790570</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2330.9584</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2022-01-02</td>\n","      <td>03:46</td>\n","      <td>Thursday</td>\n","      <td>Rainy</td>\n","      <td>Urban</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>61.86</td>\n","      <td>...</td>\n","      <td>1.00</td>\n","      <td>2.0</td>\n","      <td>10.638720</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3826.6596</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2022-01-03</td>\n","      <td>03:04</td>\n","      <td>Friday</td>\n","      <td>Cloudy</td>\n","      <td>Rural</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>49.25</td>\n","      <td>...</td>\n","      <td>2.00</td>\n","      <td>0.5</td>\n","      <td>10.123612</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2425.5625</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2022-01-04</td>\n","      <td>15:40</td>\n","      <td>Sunday</td>\n","      <td>Sunny</td>\n","      <td>Highway</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>53.22</td>\n","      <td>...</td>\n","      <td>4.00</td>\n","      <td>2.0</td>\n","      <td>10.728251</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2832.3684</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2022-01-05</td>\n","      <td>19:23</td>\n","      <td>Wednesday</td>\n","      <td>Sunny</td>\n","      <td>Urban</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>49.38</td>\n","      <td>...</td>\n","      <td>2.00</td>\n","      <td>1.0</td>\n","      <td>10.745867</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2438.3844</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>995</th>\n","      <td>996</td>\n","      <td>2024-09-22</td>\n","      <td>22:51</td>\n","      <td>Saturday</td>\n","      <td>Rainy</td>\n","      <td>Highway</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>111.15</td>\n","      <td>...</td>\n","      <td>0.75</td>\n","      <td>0.0</td>\n","      <td>10.441336</td>\n","      <td>2024</td>\n","      <td>9</td>\n","      <td>22</td>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>12354.3225</td>\n","    </tr>\n","    <tr>\n","      <th>996</th>\n","      <td>997</td>\n","      <td>2024-09-23</td>\n","      <td>14:46</td>\n","      <td>Monday</td>\n","      <td>Rainy</td>\n","      <td>Highway</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>42.15</td>\n","      <td>...</td>\n","      <td>0.00</td>\n","      <td>0.0</td>\n","      <td>9.286063</td>\n","      <td>2024</td>\n","      <td>9</td>\n","      <td>23</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1776.6225</td>\n","    </tr>\n","    <tr>\n","      <th>997</th>\n","      <td>998</td>\n","      <td>2024-09-24</td>\n","      <td>02:07</td>\n","      <td>Sunday</td>\n","      <td>Sunny</td>\n","      <td>Rural</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>25.62</td>\n","      <td>...</td>\n","      <td>1.50</td>\n","      <td>1.0</td>\n","      <td>10.597858</td>\n","      <td>2024</td>\n","      <td>9</td>\n","      <td>24</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>656.3844</td>\n","    </tr>\n","    <tr>\n","      <th>998</th>\n","      <td>999</td>\n","      <td>2024-09-25</td>\n","      <td>16:08</td>\n","      <td>Thursday</td>\n","      <td>Sunny</td>\n","      <td>Rural</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>45.56</td>\n","      <td>...</td>\n","      <td>5.00</td>\n","      <td>1.0</td>\n","      <td>10.602899</td>\n","      <td>2024</td>\n","      <td>9</td>\n","      <td>25</td>\n","      <td>16</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2075.7136</td>\n","    </tr>\n","    <tr>\n","      <th>999</th>\n","      <td>1000</td>\n","      <td>2024-09-26</td>\n","      <td>18:38</td>\n","      <td>Saturday</td>\n","      <td>Foggy</td>\n","      <td>Highway</td>\n","      <td>4</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>72.76</td>\n","      <td>...</td>\n","      <td>1.50</td>\n","      <td>0.0</td>\n","      <td>9.954962</td>\n","      <td>2024</td>\n","      <td>9</td>\n","      <td>26</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>5294.0176</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1000 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-594f9324-3713-495f-862f-907b6b9052e4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-594f9324-3713-495f-862f-907b6b9052e4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-594f9324-3713-495f-862f-907b6b9052e4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-7966fa79-f753-451e-a29d-57c6bcaf2f50\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7966fa79-f753-451e-a29d-57c6bcaf2f50')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-7966fa79-f753-451e-a29d-57c6bcaf2f50 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}}],"source":["\n","\n","# Montar Google Drive si el archivo está en Drive (opcional)\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","df = pd.read_excel(\"/content/kaggle_accidents_regression_extended (1).xlsx\")\n","display(df.head(1000))\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"3f34a0d3","executionInfo":{"status":"error","timestamp":1758242507855,"user_tz":300,"elapsed":13,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"2456453b-7006-447b-d21a-f0bfe2564498"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","model = Sequential()\n","model.add(Dense(64, input_dim=X_train_scaled.shape[1], activation='relu'))\n","model.add(Dense(32, activation='relu'))\n","model.add(Dense(1, activation='linear'))"],"execution_count":27,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-2635531379.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m64\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_dim\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mX_train_scaled\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'linear'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":564},"id":"83d76e18","executionInfo":{"status":"ok","timestamp":1758243082459,"user_tz":300,"elapsed":2652,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"8d3c9251-8201-411a-a36e-687f60a68a53"},"source":["import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","# Calculate the errors\n","errors = y_test - y_pred.flatten() # Flatten y_pred if it's a 2D array\n","\n","# Plot the histogram of errors\n","plt.figure(figsize=(10, 6))\n","sns.histplot(errors, kde=True)\n","plt.title('Histogram of Regression Errors')\n","plt.xlabel('Error')\n","plt.ylabel('Frequency')\n","plt.show()"],"execution_count":57,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0c64d77c","executionInfo":{"status":"ok","timestamp":1758243041388,"user_tz":300,"elapsed":153,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"02303ae7-f153-40fe-df1c-5fad8e248a0c"},"source":["from sklearn.metrics import mean_squared_error, r2_score\n","import numpy as np\n","\n","# Assuming y_test and y_pred are already defined from previous steps\n","mse = mean_squared_error(y_test, y_pred)\n","rmse = np.sqrt(mse)\n","r2 = r2_score(y_test, y_pred)\n","mae = model.evaluate(X_test_scaled, y_test, verbose=0)[1] # Get MAE from model.evaluate\n","mape = mean_absolute_percentage_error(y_test, y_pred)\n","\n","print(f\"Mean Squared Error (MSE): {mse:.4f}\")\n","print(f\"Root Mean Squared Error (RMSE): {rmse:.4f}\")\n","print(f\"R-squared (R2): {r2:.4f}\")\n","print(f\"Mean Absolute Error (MAE): {mae:.4f}\")\n","print(f\"Mean Absolute Percentage Error (MAPE): {mape:.4f}\")"],"execution_count":56,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Squared Error (MSE): 10036741.6036\n","Root Mean Squared Error (RMSE): 3168.0817\n","R-squared (R2): 0.9564\n","Mean Absolute Error (MAE): 2577.5798\n","Mean Absolute Percentage Error (MAPE): 0.2258\n"]}]},{"cell_type":"code","metadata":{"id":"e3518aca","executionInfo":{"status":"ok","timestamp":1758242967529,"user_tz":300,"elapsed":6,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["import pandas as pd\n","import numpy as np"],"execution_count":46,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":360},"id":"38923441","executionInfo":{"status":"ok","timestamp":1758242969141,"user_tz":300,"elapsed":1166,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"88776734-502a-4b3b-c86d-0e9686270f46"},"source":["# Montar Google Drive si el archivo está en Drive (opcional)\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","df = pd.read_excel(\"/content/kaggle_accidents_regression_extended (1).xlsx\")\n","display(df.head())"],"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"display_data","data":{"text/plain":["   Accident_ID       Date   Time Day_of_Week Weather Road_Type  \\\n","0            1 2022-01-01  03:50      Sunday  Cloudy     Urban   \n","1            2 2022-01-02  03:46    Thursday   Rainy     Urban   \n","2            3 2022-01-03  03:04      Friday  Cloudy     Rural   \n","3            4 2022-01-04  15:40      Sunday   Sunny   Highway   \n","4            5 2022-01-05  19:23   Wednesday   Sunny     Urban   \n","\n","   Vehicles_Involved  Injuries  Fatalities  Average_Speed  ...  \\\n","0                  1         2           2          48.28  ...   \n","1                  1         1           2          61.86  ...   \n","2                  2         4           1          49.25  ...   \n","3                  1         4           2          53.22  ...   \n","4                  2         4           2          49.38  ...   \n","\n","   Injuries_per_Vehicle  Fatalities_per_Vehicle  Log_Damage_Cost  Year  Month  \\\n","0                   2.0                     2.0         9.790570  2022      1   \n","1                   1.0                     2.0        10.638720  2022      1   \n","2                   2.0                     0.5        10.123612  2022      1   \n","3                   4.0                     2.0        10.728251  2022      1   \n","4                   2.0                     1.0        10.745867  2022      1   \n","\n","   Day  Hour  Weekend  Over_Speeding  Speed_Squared  \n","0    1     3        1              0      2330.9584  \n","1    2     3        0              1      3826.6596  \n","2    3     3        0              0      2425.5625  \n","3    4    15        1              0      2832.3684  \n","4    5    19        0              0      2438.3844  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-2e6d8efa-f3c0-4aa7-bc5c-e8d0dd2b0843\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Accident_ID</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Day_of_Week</th>\n","      <th>Weather</th>\n","      <th>Road_Type</th>\n","      <th>Vehicles_Involved</th>\n","      <th>Injuries</th>\n","      <th>Fatalities</th>\n","      <th>Average_Speed</th>\n","      <th>...</th>\n","      <th>Injuries_per_Vehicle</th>\n","      <th>Fatalities_per_Vehicle</th>\n","      <th>Log_Damage_Cost</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Hour</th>\n","      <th>Weekend</th>\n","      <th>Over_Speeding</th>\n","      <th>Speed_Squared</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2022-01-01</td>\n","      <td>03:50</td>\n","      <td>Sunday</td>\n","      <td>Cloudy</td>\n","      <td>Urban</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>48.28</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>9.790570</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2330.9584</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2022-01-02</td>\n","      <td>03:46</td>\n","      <td>Thursday</td>\n","      <td>Rainy</td>\n","      <td>Urban</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>61.86</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>10.638720</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3826.6596</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2022-01-03</td>\n","      <td>03:04</td>\n","      <td>Friday</td>\n","      <td>Cloudy</td>\n","      <td>Rural</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>49.25</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>0.5</td>\n","      <td>10.123612</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2425.5625</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2022-01-04</td>\n","      <td>15:40</td>\n","      <td>Sunday</td>\n","      <td>Sunny</td>\n","      <td>Highway</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>53.22</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>10.728251</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2832.3684</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2022-01-05</td>\n","      <td>19:23</td>\n","      <td>Wednesday</td>\n","      <td>Sunny</td>\n","      <td>Urban</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>49.38</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>10.745867</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2438.3844</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-2e6d8efa-f3c0-4aa7-bc5c-e8d0dd2b0843')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-2e6d8efa-f3c0-4aa7-bc5c-e8d0dd2b0843 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-2e6d8efa-f3c0-4aa7-bc5c-e8d0dd2b0843');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-05d066b9-df82-4547-885a-3cde59743652\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-05d066b9-df82-4547-885a-3cde59743652')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-05d066b9-df82-4547-885a-3cde59743652 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"9d8f9a41"},"source":["## Define x and y\n","\n","### Subtask:\n","Specify which columns from your DataFrame will be used as features (X) and which column is the target variable (y) for your regression model."]},{"cell_type":"markdown","metadata":{"id":"62bdfc81"},"source":["**Reasoning**:\n","Select the features and target from the DataFrame."]},{"cell_type":"code","metadata":{"id":"384ea34f","executionInfo":{"status":"ok","timestamp":1758242969663,"user_tz":300,"elapsed":4,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["X = ['Vehicles_Involved', 'Injuries', 'Fatalities', 'Average_Speed', 'Alcohol_Involved', 'Severity_Index', 'Injuries_per_Vehicle', 'Fatalities_per_Vehicle', 'Log_Damage_Cost', 'Year', 'Month', 'Day', 'Hour', 'Weekend', 'Over_Speeding', 'Speed_Squared']\n","y = 'Damage_Cost_USD'\n","X_data = df[X]\n","y_data = df[y]"],"execution_count":48,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"d9f14a0a"},"source":["## Split data\n","\n","### Subtask:\n","Split the data into training and testing sets to evaluate the model's performance on unseen data."]},{"cell_type":"markdown","metadata":{"id":"0fa4217b"},"source":["**Reasoning**:\n","Split the data into training and testing sets using train_test_split."]},{"cell_type":"code","metadata":{"id":"77ae5e78","executionInfo":{"status":"ok","timestamp":1758242970128,"user_tz":300,"elapsed":5,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2, random_state=42)"],"execution_count":49,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"39d91143"},"source":["## Scale data\n","\n","### Subtask:\n","Apply a scaler to the numerical features to ensure they are on a similar scale, which can improve the performance of neural networks."]},{"cell_type":"markdown","metadata":{"id":"08f78767"},"source":["**Reasoning**:\n","Import the StandardScaler, instantiate it, fit it on the training data, and then transform both training and testing data."]},{"cell_type":"code","metadata":{"id":"6ab612a3","executionInfo":{"status":"ok","timestamp":1758242970594,"user_tz":300,"elapsed":10,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"execution_count":50,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"a44874e3"},"source":["## Build the model\n","\n","### Subtask:\n","Define the architecture of the neural network using a library like TensorFlow or Keras."]},{"cell_type":"markdown","metadata":{"id":"21ca74b0"},"source":["**Reasoning**:\n","Import necessary modules from tensorflow.keras and define the neural network architecture using Sequential and Dense layers."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"17cf5faf","executionInfo":{"status":"ok","timestamp":1758242971097,"user_tz":300,"elapsed":36,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"b7a26f32-3402-49fa-858d-19ba37aa70f4"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","model = Sequential()\n","model.add(Dense(64, input_dim=X_train_scaled.shape[1], activation='relu'))\n","model.add(Dense(32, activation='relu'))\n","model.add(Dense(1, activation='linear'))"],"execution_count":51,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/keras/src/layers/core/dense.py:93: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}]},{"cell_type":"markdown","metadata":{"id":"6cf8ee24"},"source":["## Compile the model\n","\n","### Subtask:\n","Compile the neural network model by specifying the optimizer, loss function, and metrics."]},{"cell_type":"markdown","metadata":{"id":"4bf4cfc8"},"source":["**Reasoning**:\n","Compile the neural network model by specifying the optimizer, loss function and metrics."]},{"cell_type":"code","metadata":{"id":"37653c4d","executionInfo":{"status":"ok","timestamp":1758242971548,"user_tz":300,"elapsed":3,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["model.compile(optimizer='adam', loss='mse', metrics=['mae'])"],"execution_count":52,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"bd46d811"},"source":["## Train the model\n","\n","### Subtask:\n","Train the neural network using the training data."]},{"cell_type":"markdown","metadata":{"id":"7218647a"},"source":["**Reasoning**:\n","Train the compiled neural network model using the scaled training data and the training target variable."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"60c3a52c","executionInfo":{"status":"ok","timestamp":1758242989036,"user_tz":300,"elapsed":17045,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"4f93531e-e077-4ab9-bfe9-e53253b37764"},"source":["history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, validation_split=0.2)"],"execution_count":53,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 14ms/step - loss: 848725888.0000 - mae: 25548.6387 - val_loss: 802820864.0000 - val_mae: 24550.9805\n","Epoch 2/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 855603264.0000 - mae: 25648.8027 - val_loss: 802728960.0000 - val_mae: 24549.1367\n","Epoch 3/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 838017152.0000 - mae: 25307.0977 - val_loss: 802583424.0000 - val_mae: 24546.3242\n","Epoch 4/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 852011648.0000 - mae: 25519.3691 - val_loss: 802342848.0000 - val_mae: 24541.8516\n","Epoch 5/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 829128896.0000 - mae: 24995.1777 - val_loss: 801964544.0000 - val_mae: 24535.0312\n","Epoch 6/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 869644352.0000 - mae: 26110.8672 - val_loss: 801397824.0000 - val_mae: 24524.9883\n","Epoch 7/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 846056512.0000 - mae: 25330.3652 - val_loss: 800599040.0000 - val_mae: 24511.0508\n","Epoch 8/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 849660672.0000 - mae: 25807.4180 - val_loss: 799505408.0000 - val_mae: 24492.1289\n","Epoch 9/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 842285824.0000 - mae: 25251.9746 - val_loss: 798036096.0000 - val_mae: 24466.9824\n","Epoch 10/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 839512448.0000 - mae: 25148.7031 - val_loss: 796153856.0000 - val_mae: 24434.8320\n","Epoch 11/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 841364096.0000 - mae: 25471.8281 - val_loss: 793759808.0000 - val_mae: 24394.1758\n","Epoch 12/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 843303872.0000 - mae: 25479.5566 - val_loss: 790844928.0000 - val_mae: 24344.7539\n","Epoch 13/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 828731584.0000 - mae: 25143.5820 - val_loss: 787328192.0000 - val_mae: 24285.5430\n","Epoch 14/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 795324992.0000 - mae: 24502.3418 - val_loss: 783225152.0000 - val_mae: 24216.2617\n","Epoch 15/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 796294144.0000 - mae: 24653.4531 - val_loss: 778381120.0000 - val_mae: 24134.4648\n","Epoch 16/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 818240256.0000 - mae: 24983.3633 - val_loss: 772797248.0000 - val_mae: 24040.1816\n","Epoch 17/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 742575168.0000 - mae: 23445.9141 - val_loss: 766606400.0000 - val_mae: 23935.0840\n","Epoch 18/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 787425344.0000 - mae: 24577.5664 - val_loss: 759511168.0000 - val_mae: 23814.7383\n","Epoch 19/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 769656768.0000 - mae: 24050.4043 - val_loss: 751750848.0000 - val_mae: 23682.3887\n","Epoch 20/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 779094784.0000 - mae: 24294.3691 - val_loss: 743014080.0000 - val_mae: 23532.6191\n","Epoch 21/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 769283968.0000 - mae: 24120.7383 - val_loss: 733596928.0000 - val_mae: 23370.3164\n","Epoch 22/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 727710208.0000 - mae: 23395.3223 - val_loss: 723298368.0000 - val_mae: 23191.5469\n","Epoch 23/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 738784832.0000 - mae: 23466.1504 - val_loss: 712107328.0000 - val_mae: 22995.7969\n","Epoch 24/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 721736192.0000 - mae: 23319.2324 - val_loss: 700031552.0000 - val_mae: 22783.0879\n","Epoch 25/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 682343808.0000 - mae: 22570.5781 - val_loss: 687265984.0000 - val_mae: 22556.0254\n","Epoch 26/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 687611136.0000 - mae: 22536.6855 - val_loss: 673590656.0000 - val_mae: 22310.1191\n","Epoch 27/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 709072704.0000 - mae: 23254.4238 - val_loss: 658973888.0000 - val_mae: 22044.7031\n","Epoch 28/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 687377472.0000 - mae: 22693.4883 - val_loss: 643805120.0000 - val_mae: 21765.5684\n","Epoch 29/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 640938496.0000 - mae: 21993.5977 - val_loss: 628016256.0000 - val_mae: 21470.6836\n","Epoch 30/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 622131648.0000 - mae: 21609.7715 - val_loss: 611457920.0000 - val_mae: 21159.5898\n","Epoch 31/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 613163072.0000 - mae: 21453.5977 - val_loss: 594389632.0000 - val_mae: 20837.1934\n","Epoch 32/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 561670848.0000 - mae: 20416.5898 - val_loss: 576360832.0000 - val_mae: 20490.0371\n","Epoch 33/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 584081280.0000 - mae: 20984.4922 - val_loss: 558108800.0000 - val_mae: 20134.9492\n","Epoch 34/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 578349504.0000 - mae: 20750.2422 - val_loss: 539276672.0000 - val_mae: 19761.8711\n","Epoch 35/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 541607808.0000 - mae: 20138.6621 - val_loss: 520012800.0000 - val_mae: 19371.9688\n","Epoch 36/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 507786240.0000 - mae: 19254.5156 - val_loss: 500814240.0000 - val_mae: 18974.5703\n","Epoch 37/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 11ms/step - loss: 489341312.0000 - mae: 18879.2031 - val_loss: 480975040.0000 - val_mae: 18556.5820\n","Epoch 38/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 438018592.0000 - mae: 17746.6934 - val_loss: 461418144.0000 - val_mae: 18133.2969\n","Epoch 39/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 455950688.0000 - mae: 18186.1992 - val_loss: 440989888.0000 - val_mae: 17684.8887\n","Epoch 40/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 408821088.0000 - mae: 17005.2969 - val_loss: 421309312.0000 - val_mae: 17240.1367\n","Epoch 41/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 399656096.0000 - mae: 16855.1348 - val_loss: 401044416.0000 - val_mae: 16774.9336\n","Epoch 42/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 366507744.0000 - mae: 16224.4766 - val_loss: 381296096.0000 - val_mae: 16314.1953\n","Epoch 43/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 348368000.0000 - mae: 15850.3232 - val_loss: 362042272.0000 - val_mae: 15856.2871\n","Epoch 44/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 318601376.0000 - mae: 14964.8291 - val_loss: 342767680.0000 - val_mae: 15382.7314\n","Epoch 45/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 327611616.0000 - mae: 15110.3516 - val_loss: 323169472.0000 - val_mae: 14889.8906\n","Epoch 46/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 304233696.0000 - mae: 14621.3457 - val_loss: 305072448.0000 - val_mae: 14419.2529\n","Epoch 47/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 265757312.0000 - mae: 13687.1025 - val_loss: 287178560.0000 - val_mae: 13939.5908\n","Epoch 48/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 261751328.0000 - mae: 13388.3984 - val_loss: 269757440.0000 - val_mae: 13461.2451\n","Epoch 49/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 236887024.0000 - mae: 12756.9971 - val_loss: 252792368.0000 - val_mae: 12980.7246\n","Epoch 50/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 219881232.0000 - mae: 12104.4795 - val_loss: 236733824.0000 - val_mae: 12511.8359\n","Epoch 51/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 197006160.0000 - mae: 11457.8008 - val_loss: 221240656.0000 - val_mae: 12052.3652\n","Epoch 52/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 189661152.0000 - mae: 11299.6543 - val_loss: 206073376.0000 - val_mae: 11582.9365\n","Epoch 53/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 168719200.0000 - mae: 10662.2207 - val_loss: 192061216.0000 - val_mae: 11134.7324\n","Epoch 54/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 160642592.0000 - mae: 10269.9590 - val_loss: 178585424.0000 - val_mae: 10687.6113\n","Epoch 55/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 149794640.0000 - mae: 9865.8711 - val_loss: 165985664.0000 - val_mae: 10258.7256\n","Epoch 56/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 126851120.0000 - mae: 8996.7119 - val_loss: 153957008.0000 - val_mae: 9844.3877\n","Epoch 57/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 127193576.0000 - mae: 9003.0469 - val_loss: 142530240.0000 - val_mae: 9435.3438\n","Epoch 58/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 118549704.0000 - mae: 8625.6260 - val_loss: 132120600.0000 - val_mae: 9045.5127\n","Epoch 59/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 105663352.0000 - mae: 8255.6533 - val_loss: 122019536.0000 - val_mae: 8662.7031\n","Epoch 60/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 92283776.0000 - mae: 7544.8003 - val_loss: 112835632.0000 - val_mae: 8317.1221\n","Epoch 61/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 89511248.0000 - mae: 7509.1631 - val_loss: 104129808.0000 - val_mae: 7985.4541\n","Epoch 62/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 87140472.0000 - mae: 7447.2529 - val_loss: 96089544.0000 - val_mae: 7669.3828\n","Epoch 63/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 74006896.0000 - mae: 6775.6084 - val_loss: 88744912.0000 - val_mae: 7373.1514\n","Epoch 64/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 72020248.0000 - mae: 6644.2085 - val_loss: 82049280.0000 - val_mae: 7091.5752\n","Epoch 65/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 62046884.0000 - mae: 6205.7183 - val_loss: 75884096.0000 - val_mae: 6822.7085\n","Epoch 66/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 55530880.0000 - mae: 5883.2075 - val_loss: 70031784.0000 - val_mae: 6558.5063\n","Epoch 67/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 53522064.0000 - mae: 5838.5615 - val_loss: 64713752.0000 - val_mae: 6304.3955\n","Epoch 68/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 45726044.0000 - mae: 5371.5107 - val_loss: 60060052.0000 - val_mae: 6070.1641\n","Epoch 69/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 45029600.0000 - mae: 5267.2661 - val_loss: 55583628.0000 - val_mae: 5835.5107\n","Epoch 70/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 43002448.0000 - mae: 5209.5156 - val_loss: 51485100.0000 - val_mae: 5614.0303\n","Epoch 71/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 38156372.0000 - mae: 4892.8926 - val_loss: 47923248.0000 - val_mae: 5413.4229\n","Epoch 72/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 35078120.0000 - mae: 4687.8008 - val_loss: 44621852.0000 - val_mae: 5224.8228\n","Epoch 73/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 29771940.0000 - mae: 4344.5205 - val_loss: 41468776.0000 - val_mae: 5040.0322\n","Epoch 74/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 30869854.0000 - mae: 4430.1885 - val_loss: 38691780.0000 - val_mae: 4868.9136\n","Epoch 75/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 27735464.0000 - mae: 4228.2803 - val_loss: 36170892.0000 - val_mae: 4711.6499\n","Epoch 76/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 27977134.0000 - mae: 4122.7739 - val_loss: 33859296.0000 - val_mae: 4561.0444\n","Epoch 77/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 25542448.0000 - mae: 4035.1592 - val_loss: 31771930.0000 - val_mae: 4423.3320\n","Epoch 78/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 24098824.0000 - mae: 3910.0156 - val_loss: 29833754.0000 - val_mae: 4291.8955\n","Epoch 79/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 21811774.0000 - mae: 3707.1863 - val_loss: 28124794.0000 - val_mae: 4170.5142\n","Epoch 80/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 21222558.0000 - mae: 3703.5571 - val_loss: 26511516.0000 - val_mae: 4050.4980\n","Epoch 81/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 12ms/step - loss: 21163388.0000 - mae: 3717.5522 - val_loss: 24991606.0000 - val_mae: 3933.3237\n","Epoch 82/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 18841214.0000 - mae: 3422.2207 - val_loss: 23619908.0000 - val_mae: 3824.5957\n","Epoch 83/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 18382092.0000 - mae: 3350.4636 - val_loss: 22396152.0000 - val_mae: 3724.7507\n","Epoch 84/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 17312390.0000 - mae: 3381.6775 - val_loss: 21229250.0000 - val_mae: 3627.4922\n","Epoch 85/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 16664272.0000 - mae: 3265.1438 - val_loss: 20157878.0000 - val_mae: 3538.0378\n","Epoch 86/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 16110443.0000 - mae: 3216.6846 - val_loss: 19190400.0000 - val_mae: 3453.6855\n","Epoch 87/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 15156785.0000 - mae: 3120.6970 - val_loss: 18245860.0000 - val_mae: 3369.5383\n","Epoch 88/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 14453635.0000 - mae: 3029.1602 - val_loss: 17367808.0000 - val_mae: 3289.2183\n","Epoch 89/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 14038171.0000 - mae: 2982.8723 - val_loss: 16558381.0000 - val_mae: 3213.8357\n","Epoch 90/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 11986215.0000 - mae: 2786.8372 - val_loss: 15839582.0000 - val_mae: 3144.1550\n","Epoch 91/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 14066171.0000 - mae: 3041.2729 - val_loss: 15100571.0000 - val_mae: 3069.4500\n","Epoch 92/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 11711708.0000 - mae: 2746.8208 - val_loss: 14450890.0000 - val_mae: 3004.4167\n","Epoch 93/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 12357259.0000 - mae: 2841.7490 - val_loss: 13820339.0000 - val_mae: 2938.9734\n","Epoch 94/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 11823603.0000 - mae: 2783.7542 - val_loss: 13263076.0000 - val_mae: 2876.6772\n","Epoch 95/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 11600409.0000 - mae: 2780.5691 - val_loss: 12684763.0000 - val_mae: 2813.0708\n","Epoch 96/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 11159908.0000 - mae: 2639.8511 - val_loss: 12184984.0000 - val_mae: 2756.6536\n","Epoch 97/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 10394241.0000 - mae: 2576.2415 - val_loss: 11687304.0000 - val_mae: 2698.4153\n","Epoch 98/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 10227224.0000 - mae: 2536.7942 - val_loss: 11235145.0000 - val_mae: 2644.1072\n","Epoch 99/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 9439502.0000 - mae: 2469.8411 - val_loss: 10818405.0000 - val_mae: 2595.2578\n","Epoch 100/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 9197845.0000 - mae: 2402.6948 - val_loss: 10413237.0000 - val_mae: 2546.1177\n"]}]},{"cell_type":"markdown","metadata":{"id":"4b6fb0d6"},"source":["## Evaluate the model\n","\n","### Subtask:\n","Evaluate the trained model's performance on the testing data using appropriate regression metrics."]},{"cell_type":"markdown","metadata":{"id":"0d4c3325"},"source":["**Reasoning**:\n","Evaluate the trained model on the test data to assess its performance."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"a7d05b15","executionInfo":{"status":"ok","timestamp":1758242989701,"user_tz":300,"elapsed":207,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"6388d37c-b31a-4379-a8fe-dd2c5903c40c"},"source":["evaluation_results = model.evaluate(X_test_scaled, y_test, verbose=0)\n","print(f\"Test Loss: {evaluation_results[0]:.4f}\")\n","print(f\"Test MAE: {evaluation_results[1]:.4f}\")"],"execution_count":54,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Loss: 10036741.0000\n","Test MAE: 2577.5798\n"]}]},{"cell_type":"markdown","metadata":{"id":"dccde794"},"source":["## Calculate MAPE\n","\n","### Subtask:\n","Calculate the Mean Absolute Percentage Error (MAPE) to evaluate the model's performance."]},{"cell_type":"markdown","metadata":{"id":"f7e09be6"},"source":["**Reasoning**:\n","Import the mean_absolute_percentage_error metric from sklearn.metrics, predict the target variable on the test data, and calculate the MAPE."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cf168d70","executionInfo":{"status":"ok","timestamp":1758242990402,"user_tz":300,"elapsed":256,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"66a75d51-15f0-4b06-cd16-3466efaff263"},"source":["from sklearn.metrics import mean_absolute_percentage_error\n","\n","y_pred = model.predict(X_test_scaled)\n","\n","mape = mean_absolute_percentage_error(y_test, y_pred)\n","\n","print(f\"Test MAPE: {mape:.4f}\")"],"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 13ms/step\n","Test MAPE: 0.2258\n"]}]},{"cell_type":"markdown","metadata":{"id":"76cc37c6"},"source":["## Summary:\n","\n","### Data Analysis Key Findings\n","\n","* The features used for the regression model were 'Vehicles\\_Involved', 'Injuries', 'Fatalities', 'Average\\_Speed', 'Alcohol\\_Involved', 'Severity\\_Index', 'Injuries\\_per\\_Vehicle', 'Fatalities\\_per\\_Vehicle', 'Log\\_Damage\\_Cost', 'Year', 'Month', 'Day', 'Hour', 'Weekend', 'Over\\_Speeding', and 'Speed\\_Squared', with the target variable being 'Damage\\_Cost\\_USD'.\n","* The data was split into training and testing sets with 80% for training and 20% for testing.\n","* The numerical features were scaled using `StandardScaler`.\n","* The neural network model was built with an input layer, two hidden layers using ReLU activation, and an output layer with linear activation.\n","* The model was compiled using the Adam optimizer and Mean Squared Error (MSE) as the loss function, with Mean Absolute Error (MAE) as a metric.\n","* The model was trained for 100 epochs with a batch size of 32 and a validation split of 0.2.\n","* The model's performance on the test set resulted in a Test Loss of approximately 10,176,093.0000 and a Test MAE of approximately 2590.5996.\n","\n","### Insights or Next Steps\n","\n","* The high Test Loss and MAE suggest that the model's predictions have a significant average deviation from the actual damage costs. Further hyperparameter tuning or exploring more complex model architectures could potentially improve performance.\n","* Analyzing the distribution of the 'Damage\\_Cost\\_USD' and the relationship between features and the target variable could provide insights into potential data transformations or feature engineering that might help the model learn more effectively."]},{"cell_type":"code","metadata":{"id":"086dc72f","executionInfo":{"status":"ok","timestamp":1758242659995,"user_tz":300,"elapsed":32,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["import pandas as pd\n","import numpy as np"],"execution_count":36,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":360},"id":"34cb1e34","executionInfo":{"status":"ok","timestamp":1758242661673,"user_tz":300,"elapsed":1239,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"3e27e99e-c834-47ce-9bad-006602dac067"},"source":["# Montar Google Drive si el archivo está en Drive (opcional)\n","from google.colab import drive\n","drive.mount('/content/drive')\n","\n","df = pd.read_excel(\"/content/kaggle_accidents_regression_extended (1).xlsx\")\n","display(df.head())"],"execution_count":37,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]},{"output_type":"display_data","data":{"text/plain":["   Accident_ID       Date   Time Day_of_Week Weather Road_Type  \\\n","0            1 2022-01-01  03:50      Sunday  Cloudy     Urban   \n","1            2 2022-01-02  03:46    Thursday   Rainy     Urban   \n","2            3 2022-01-03  03:04      Friday  Cloudy     Rural   \n","3            4 2022-01-04  15:40      Sunday   Sunny   Highway   \n","4            5 2022-01-05  19:23   Wednesday   Sunny     Urban   \n","\n","   Vehicles_Involved  Injuries  Fatalities  Average_Speed  ...  \\\n","0                  1         2           2          48.28  ...   \n","1                  1         1           2          61.86  ...   \n","2                  2         4           1          49.25  ...   \n","3                  1         4           2          53.22  ...   \n","4                  2         4           2          49.38  ...   \n","\n","   Injuries_per_Vehicle  Fatalities_per_Vehicle  Log_Damage_Cost  Year  Month  \\\n","0                   2.0                     2.0         9.790570  2022      1   \n","1                   1.0                     2.0        10.638720  2022      1   \n","2                   2.0                     0.5        10.123612  2022      1   \n","3                   4.0                     2.0        10.728251  2022      1   \n","4                   2.0                     1.0        10.745867  2022      1   \n","\n","   Day  Hour  Weekend  Over_Speeding  Speed_Squared  \n","0    1     3        1              0      2330.9584  \n","1    2     3        0              1      3826.6596  \n","2    3     3        0              0      2425.5625  \n","3    4    15        1              0      2832.3684  \n","4    5    19        0              0      2438.3844  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","  <div id=\"df-989b8dbd-8396-4b93-95bf-f2e80a7183ad\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Accident_ID</th>\n","      <th>Date</th>\n","      <th>Time</th>\n","      <th>Day_of_Week</th>\n","      <th>Weather</th>\n","      <th>Road_Type</th>\n","      <th>Vehicles_Involved</th>\n","      <th>Injuries</th>\n","      <th>Fatalities</th>\n","      <th>Average_Speed</th>\n","      <th>...</th>\n","      <th>Injuries_per_Vehicle</th>\n","      <th>Fatalities_per_Vehicle</th>\n","      <th>Log_Damage_Cost</th>\n","      <th>Year</th>\n","      <th>Month</th>\n","      <th>Day</th>\n","      <th>Hour</th>\n","      <th>Weekend</th>\n","      <th>Over_Speeding</th>\n","      <th>Speed_Squared</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>2022-01-01</td>\n","      <td>03:50</td>\n","      <td>Sunday</td>\n","      <td>Cloudy</td>\n","      <td>Urban</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>48.28</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>2.0</td>\n","      <td>9.790570</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2330.9584</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2022-01-02</td>\n","      <td>03:46</td>\n","      <td>Thursday</td>\n","      <td>Rainy</td>\n","      <td>Urban</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>61.86</td>\n","      <td>...</td>\n","      <td>1.0</td>\n","      <td>2.0</td>\n","      <td>10.638720</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3826.6596</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>2022-01-03</td>\n","      <td>03:04</td>\n","      <td>Friday</td>\n","      <td>Cloudy</td>\n","      <td>Rural</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>49.25</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>0.5</td>\n","      <td>10.123612</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2425.5625</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>2022-01-04</td>\n","      <td>15:40</td>\n","      <td>Sunday</td>\n","      <td>Sunny</td>\n","      <td>Highway</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>53.22</td>\n","      <td>...</td>\n","      <td>4.0</td>\n","      <td>2.0</td>\n","      <td>10.728251</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>15</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2832.3684</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>2022-01-05</td>\n","      <td>19:23</td>\n","      <td>Wednesday</td>\n","      <td>Sunny</td>\n","      <td>Urban</td>\n","      <td>2</td>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>49.38</td>\n","      <td>...</td>\n","      <td>2.0</td>\n","      <td>1.0</td>\n","      <td>10.745867</td>\n","      <td>2022</td>\n","      <td>1</td>\n","      <td>5</td>\n","      <td>19</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2438.3844</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-989b8dbd-8396-4b93-95bf-f2e80a7183ad')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-989b8dbd-8396-4b93-95bf-f2e80a7183ad button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-989b8dbd-8396-4b93-95bf-f2e80a7183ad');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-ac997798-61b1-4c23-9863-454f766d7403\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ac997798-61b1-4c23-9863-454f766d7403')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-ac997798-61b1-4c23-9863-454f766d7403 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe"}},"metadata":{}}]},{"cell_type":"markdown","metadata":{"id":"a7d1aca1"},"source":["## Define x and y\n","\n","### Subtask:\n","Specify which columns from your DataFrame will be used as features (X) and which column is the target variable (y) for your regression model."]},{"cell_type":"markdown","metadata":{"id":"74bc006a"},"source":["**Reasoning**:\n","Select the features and target from the DataFrame."]},{"cell_type":"code","metadata":{"id":"990a3ded","executionInfo":{"status":"ok","timestamp":1758242662164,"user_tz":300,"elapsed":5,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["X = ['Vehicles_Involved', 'Injuries', 'Fatalities', 'Average_Speed', 'Alcohol_Involved', 'Severity_Index', 'Injuries_per_Vehicle', 'Fatalities_per_Vehicle', 'Log_Damage_Cost', 'Year', 'Month', 'Day', 'Hour', 'Weekend', 'Over_Speeding', 'Speed_Squared']\n","y = 'Damage_Cost_USD'\n","X_data = df[X]\n","y_data = df[y]"],"execution_count":38,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"0aa5a3ac"},"source":["## Split data\n","\n","### Subtask:\n","Split the data into training and testing sets to evaluate the model's performance on unseen data."]},{"cell_type":"markdown","metadata":{"id":"5a618e53"},"source":["**Reasoning**:\n","Split the data into training and testing sets using train_test_split."]},{"cell_type":"code","metadata":{"id":"7728b356","executionInfo":{"status":"ok","timestamp":1758242662618,"user_tz":300,"elapsed":7,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2, random_state=42)"],"execution_count":39,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"a432d4c9"},"source":["## Scale data\n","\n","### Subtask:\n","Apply a scaler to the numerical features to ensure they are on a similar scale, which can improve the performance of neural networks."]},{"cell_type":"markdown","metadata":{"id":"5be1e678"},"source":["**Reasoning**:\n","Import the StandardScaler, instantiate it, fit it on the training data, and then transform both training and testing data."]},{"cell_type":"code","metadata":{"id":"21a45948","executionInfo":{"status":"ok","timestamp":1758242663079,"user_tz":300,"elapsed":14,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"execution_count":40,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"368af35d"},"source":["## Build the model\n","\n","### Subtask:\n","Define the architecture of the neural network using a library like TensorFlow or Keras."]},{"cell_type":"markdown","metadata":{"id":"e1c785c6"},"source":["**Reasoning**:\n","Import necessary modules from tensorflow.keras and define the neural network architecture using Sequential and Dense layers."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"225eac7e","executionInfo":{"status":"ok","timestamp":1758242663593,"user_tz":300,"elapsed":65,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"6b36510f-8e81-496f-b9db-ca5668b8ed39"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","model = Sequential()\n","model.add(Dense(64, input_dim=X_train_scaled.shape[1], activation='relu'))\n","model.add(Dense(32, activation='relu'))\n","model.add(Dense(1, activation='linear'))"],"execution_count":41,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/keras/src/layers/core/dense.py:93: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}]},{"cell_type":"markdown","metadata":{"id":"afe567d9"},"source":["## Compile the model\n","\n","### Subtask:\n","Compile the neural network model by specifying the optimizer, loss function, and metrics."]},{"cell_type":"markdown","metadata":{"id":"d21117f1"},"source":["**Reasoning**:\n","Compile the neural network model by specifying the optimizer, loss function, and metrics."]},{"cell_type":"code","metadata":{"id":"29426267","executionInfo":{"status":"ok","timestamp":1758242664076,"user_tz":300,"elapsed":28,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["model.compile(optimizer='adam', loss='mse', metrics=['mae'])"],"execution_count":42,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"e468370a"},"source":["## Train the model\n","\n","### Subtask:\n","Train the neural network using the training data."]},{"cell_type":"markdown","metadata":{"id":"a778a187"},"source":["**Reasoning**:\n","Train the compiled neural network model using the scaled training data and the training target variable."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2d7a8431","executionInfo":{"status":"ok","timestamp":1758242683198,"user_tz":300,"elapsed":18671,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"14a20930-67d3-4411-bcf1-7569d6eb219c"},"source":["history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, validation_split=0.2)"],"execution_count":43,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 19ms/step - loss: 855108672.0000 - mae: 25671.3848 - val_loss: 802783488.0000 - val_mae: 24550.1094\n","Epoch 2/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 837138432.0000 - mae: 25311.7305 - val_loss: 802668928.0000 - val_mae: 24547.8672\n","Epoch 3/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 14ms/step - loss: 817719424.0000 - mae: 25088.0156 - val_loss: 802474176.0000 - val_mae: 24544.1953\n","Epoch 4/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 818823808.0000 - mae: 24994.4082 - val_loss: 802159744.0000 - val_mae: 24538.4746\n","Epoch 5/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 837410176.0000 - mae: 25233.3926 - val_loss: 801683904.0000 - val_mae: 24529.9961\n","Epoch 6/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 805873088.0000 - mae: 24674.6152 - val_loss: 800985280.0000 - val_mae: 24517.7969\n","Epoch 7/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 822832384.0000 - mae: 25099.2051 - val_loss: 800003648.0000 - val_mae: 24500.8867\n","Epoch 8/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 831066368.0000 - mae: 25174.9219 - val_loss: 798674624.0000 - val_mae: 24478.2773\n","Epoch 9/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 812956800.0000 - mae: 24827.5547 - val_loss: 796953600.0000 - val_mae: 24449.1680\n","Epoch 10/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 819959360.0000 - mae: 24738.4688 - val_loss: 794765376.0000 - val_mae: 24412.4414\n","Epoch 11/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 811239872.0000 - mae: 24801.5000 - val_loss: 792051008.0000 - val_mae: 24367.0566\n","Epoch 12/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 831409408.0000 - mae: 24950.0742 - val_loss: 788736704.0000 - val_mae: 24311.8535\n","Epoch 13/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 807968320.0000 - mae: 24771.9180 - val_loss: 784829824.0000 - val_mae: 24246.7773\n","Epoch 14/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 811784640.0000 - mae: 24825.5039 - val_loss: 780215680.0000 - val_mae: 24170.0312\n","Epoch 15/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 824167680.0000 - mae: 25174.6406 - val_loss: 774931264.0000 - val_mae: 24081.9062\n","Epoch 16/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 753607680.0000 - mae: 23462.0449 - val_loss: 769006208.0000 - val_mae: 23982.9844\n","Epoch 17/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 792401216.0000 - mae: 24481.0430 - val_loss: 762216704.0000 - val_mae: 23869.3652\n","Epoch 18/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 753540608.0000 - mae: 23911.0449 - val_loss: 754585600.0000 - val_mae: 23741.2812\n","Epoch 19/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 809488640.0000 - mae: 24842.7207 - val_loss: 746115776.0000 - val_mae: 23598.5273\n","Epoch 20/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 774304896.0000 - mae: 24140.7344 - val_loss: 736790336.0000 - val_mae: 23440.8691\n","Epoch 21/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 742846656.0000 - mae: 23719.8594 - val_loss: 726695296.0000 - val_mae: 23268.4277\n","Epoch 22/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 707893696.0000 - mae: 22903.5742 - val_loss: 715849536.0000 - val_mae: 23081.9590\n","Epoch 23/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 695827008.0000 - mae: 22755.9043 - val_loss: 703875328.0000 - val_mae: 22875.0801\n","Epoch 24/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 689453184.0000 - mae: 22784.1504 - val_loss: 691322496.0000 - val_mae: 22655.7617\n","Epoch 25/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 681552256.0000 - mae: 22746.9863 - val_loss: 677716480.0000 - val_mae: 22415.8320\n","Epoch 26/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 690222144.0000 - mae: 22668.5586 - val_loss: 663150272.0000 - val_mae: 22156.4883\n","Epoch 27/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 684820416.0000 - mae: 22555.5664 - val_loss: 647774848.0000 - val_mae: 21880.3828\n","Epoch 28/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 662142080.0000 - mae: 22350.7637 - val_loss: 631580800.0000 - val_mae: 21584.7988\n","Epoch 29/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 638470464.0000 - mae: 21673.3379 - val_loss: 614821632.0000 - val_mae: 21274.5977\n","Epoch 30/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 610850880.0000 - mae: 21402.7148 - val_loss: 597411712.0000 - val_mae: 20950.1680\n","Epoch 31/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 624151808.0000 - mae: 21546.0996 - val_loss: 579004288.0000 - val_mae: 20603.4746\n","Epoch 32/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 599052480.0000 - mae: 21183.4004 - val_loss: 560122496.0000 - val_mae: 20241.3379\n","Epoch 33/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 551000960.0000 - mae: 20187.0293 - val_loss: 541093760.0000 - val_mae: 19869.2031\n","Epoch 34/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 536743040.0000 - mae: 19734.5586 - val_loss: 521161472.0000 - val_mae: 19472.1250\n","Epoch 35/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 520516384.0000 - mae: 19536.2793 - val_loss: 500908096.0000 - val_mae: 19062.4062\n","Epoch 36/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 531180352.0000 - mae: 19888.2754 - val_loss: 480100160.0000 - val_mae: 18635.3711\n","Epoch 37/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 494892512.0000 - mae: 19143.4199 - val_loss: 459121568.0000 - val_mae: 18194.2246\n","Epoch 38/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 454803648.0000 - mae: 18261.2461 - val_loss: 438082112.0000 - val_mae: 17741.5176\n","Epoch 39/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 438008032.0000 - mae: 17813.2344 - val_loss: 416436192.0000 - val_mae: 17264.1621\n","Epoch 40/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 424961632.0000 - mae: 17471.0723 - val_loss: 394848928.0000 - val_mae: 16774.0215\n","Epoch 41/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 412111968.0000 - mae: 17534.3438 - val_loss: 373710432.0000 - val_mae: 16282.2012\n","Epoch 42/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 352076640.0000 - mae: 15798.0098 - val_loss: 352743552.0000 - val_mae: 15781.5605\n","Epoch 43/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 318638368.0000 - mae: 14940.6914 - val_loss: 332231904.0000 - val_mae: 15280.1562\n","Epoch 44/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 330902336.0000 - mae: 15449.7949 - val_loss: 311291520.0000 - val_mae: 14759.2324\n","Epoch 45/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 301336384.0000 - mae: 14772.6748 - val_loss: 291514528.0000 - val_mae: 14255.6660\n","Epoch 46/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 296446464.0000 - mae: 14427.2568 - val_loss: 272019456.0000 - val_mae: 13739.5127\n","Epoch 47/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 267947232.0000 - mae: 13626.9736 - val_loss: 253331968.0000 - val_mae: 13228.1172\n","Epoch 48/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 247162432.0000 - mae: 13125.3340 - val_loss: 235336400.0000 - val_mae: 12718.6475\n","Epoch 49/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 218314160.0000 - mae: 12251.2344 - val_loss: 218280368.0000 - val_mae: 12211.8174\n","Epoch 50/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 194003920.0000 - mae: 11383.3301 - val_loss: 201717424.0000 - val_mae: 11699.9629\n","Epoch 51/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 174861872.0000 - mae: 10815.4443 - val_loss: 186362688.0000 - val_mae: 11205.9971\n","Epoch 52/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 169619888.0000 - mae: 10528.4785 - val_loss: 171663008.0000 - val_mae: 10719.1582\n","Epoch 53/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 148848864.0000 - mae: 9831.2705 - val_loss: 157714464.0000 - val_mae: 10240.0537\n","Epoch 54/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 143763872.0000 - mae: 9763.5908 - val_loss: 144729392.0000 - val_mae: 9784.5967\n","Epoch 55/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 130673840.0000 - mae: 9326.4268 - val_loss: 132638440.0000 - val_mae: 9334.7754\n","Epoch 56/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 121510120.0000 - mae: 8906.1016 - val_loss: 121538792.0000 - val_mae: 8906.1094\n","Epoch 57/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 108978704.0000 - mae: 8263.8145 - val_loss: 111360080.0000 - val_mae: 8505.2207\n","Epoch 58/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 97044992.0000 - mae: 7855.5518 - val_loss: 102028096.0000 - val_mae: 8121.9951\n","Epoch 59/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 87059624.0000 - mae: 7542.3149 - val_loss: 93423104.0000 - val_mae: 7748.9390\n","Epoch 60/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 76726872.0000 - mae: 6996.1377 - val_loss: 85622928.0000 - val_mae: 7390.2783\n","Epoch 61/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 73284672.0000 - mae: 6815.4438 - val_loss: 78461264.0000 - val_mae: 7041.0615\n","Epoch 62/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 75045224.0000 - mae: 6985.7168 - val_loss: 71932896.0000 - val_mae: 6711.1304\n","Epoch 63/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 58505628.0000 - mae: 6115.8755 - val_loss: 66263980.0000 - val_mae: 6407.2803\n","Epoch 64/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 55078180.0000 - mae: 5893.8750 - val_loss: 61120296.0000 - val_mae: 6125.4219\n","Epoch 65/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 52146760.0000 - mae: 5731.6323 - val_loss: 56288520.0000 - val_mae: 5859.1694\n","Epoch 66/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 49972812.0000 - mae: 5638.7246 - val_loss: 52035104.0000 - val_mae: 5614.7783\n","Epoch 67/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 17ms/step - loss: 37674900.0000 - mae: 4915.9834 - val_loss: 48411592.0000 - val_mae: 5416.7227\n","Epoch 68/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 39362904.0000 - mae: 4977.5312 - val_loss: 44936572.0000 - val_mae: 5222.3779\n","Epoch 69/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 36698468.0000 - mae: 4841.0137 - val_loss: 41849732.0000 - val_mae: 5048.2578\n","Epoch 70/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 33393594.0000 - mae: 4590.2285 - val_loss: 39147608.0000 - val_mae: 4893.3838\n","Epoch 71/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 33811476.0000 - mae: 4734.1748 - val_loss: 36599572.0000 - val_mae: 4741.9268\n","Epoch 72/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 31311496.0000 - mae: 4508.9668 - val_loss: 34336684.0000 - val_mae: 4607.7100\n","Epoch 73/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 26451134.0000 - mae: 4152.5093 - val_loss: 32348358.0000 - val_mae: 4486.7993\n","Epoch 74/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 24976258.0000 - mae: 3971.0850 - val_loss: 30549744.0000 - val_mae: 4370.2627\n","Epoch 75/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 22762300.0000 - mae: 3824.7273 - val_loss: 28840970.0000 - val_mae: 4254.8994\n","Epoch 76/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 22147338.0000 - mae: 3827.2339 - val_loss: 27240196.0000 - val_mae: 4144.1982\n","Epoch 77/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 20307686.0000 - mae: 3605.5093 - val_loss: 25845620.0000 - val_mae: 4044.4309\n","Epoch 78/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 19794708.0000 - mae: 3598.8530 - val_loss: 24516712.0000 - val_mae: 3946.3159\n","Epoch 79/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 20919722.0000 - mae: 3629.0945 - val_loss: 23237554.0000 - val_mae: 3846.7258\n","Epoch 80/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 18073990.0000 - mae: 3397.2646 - val_loss: 22120362.0000 - val_mae: 3756.7407\n","Epoch 81/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 17904438.0000 - mae: 3414.9912 - val_loss: 21061274.0000 - val_mae: 3668.0610\n","Epoch 82/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 16037860.0000 - mae: 3215.2944 - val_loss: 20063668.0000 - val_mae: 3582.9634\n","Epoch 83/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 16978378.0000 - mae: 3343.8828 - val_loss: 19146340.0000 - val_mae: 3503.8540\n","Epoch 84/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 15737380.0000 - mae: 3238.3633 - val_loss: 18264224.0000 - val_mae: 3425.1770\n","Epoch 85/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 16339232.0000 - mae: 3215.1182 - val_loss: 17422688.0000 - val_mae: 3347.4167\n","Epoch 86/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 12604207.0000 - mae: 2856.0093 - val_loss: 16688837.0000 - val_mae: 3278.0532\n","Epoch 87/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 13876118.0000 - mae: 2998.6748 - val_loss: 15899120.0000 - val_mae: 3201.4753\n","Epoch 88/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 13078503.0000 - mae: 2871.0747 - val_loss: 15210886.0000 - val_mae: 3133.3438\n","Epoch 89/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 12421141.0000 - mae: 2868.2002 - val_loss: 14537173.0000 - val_mae: 3063.6621\n","Epoch 90/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 12784461.0000 - mae: 2886.4092 - val_loss: 13904995.0000 - val_mae: 2996.5498\n","Epoch 91/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 11063292.0000 - mae: 2663.9497 - val_loss: 13298610.0000 - val_mae: 2929.6938\n","Epoch 92/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 11333001.0000 - mae: 2662.5984 - val_loss: 12763056.0000 - val_mae: 2870.7395\n","Epoch 93/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 10782470.0000 - mae: 2631.6433 - val_loss: 12209949.0000 - val_mae: 2807.6108\n","Epoch 94/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 9729379.0000 - mae: 2517.3843 - val_loss: 11706831.0000 - val_mae: 2748.8345\n","Epoch 95/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 9665096.0000 - mae: 2465.6675 - val_loss: 11233502.0000 - val_mae: 2692.3433\n","Epoch 96/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 9408735.0000 - mae: 2455.9187 - val_loss: 10775390.0000 - val_mae: 2636.0413\n","Epoch 97/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 8528289.0000 - mae: 2355.0452 - val_loss: 10363618.0000 - val_mae: 2585.6567\n","Epoch 98/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 8956203.0000 - mae: 2390.6794 - val_loss: 9948547.0000 - val_mae: 2533.4570\n","Epoch 99/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 7913868.5000 - mae: 2196.8035 - val_loss: 9583890.0000 - val_mae: 2486.9006\n","Epoch 100/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 8077000.5000 - mae: 2225.1814 - val_loss: 9216006.0000 - val_mae: 2441.3035\n"]}]},{"cell_type":"markdown","metadata":{"id":"921a9ef2"},"source":["## Evaluate the model\n","\n","### Subtask:\n","Evaluate the trained model's performance on the testing data using appropriate regression metrics."]},{"cell_type":"markdown","metadata":{"id":"a06668b0"},"source":["**Reasoning**:\n","Evaluate the trained model on the test data to assess its performance."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0f6a73d4","executionInfo":{"status":"ok","timestamp":1758242683892,"user_tz":300,"elapsed":238,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"55018082-6915-4d41-e7e8-8533d742a57d"},"source":["evaluation_results = model.evaluate(X_test_scaled, y_test, verbose=0)\n","print(f\"Test Loss: {evaluation_results[0]:.4f}\")\n","print(f\"Test MAE: {evaluation_results[1]:.4f}\")"],"execution_count":44,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Loss: 9099299.0000\n","Test MAE: 2432.0942\n"]}]},{"cell_type":"markdown","metadata":{"id":"f3e64352"},"source":["## Calculate MAPE\n","\n","### Subtask:\n","Calculate the Mean Absolute Percentage Error (MAPE) to evaluate the model's performance."]},{"cell_type":"markdown","metadata":{"id":"2dba1ded"},"source":["**Reasoning**:\n","Import the mean_absolute_percentage_error metric from sklearn.metrics, predict the target variable on the test data, and calculate the MAPE."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"303bb756","executionInfo":{"status":"ok","timestamp":1758242684570,"user_tz":300,"elapsed":224,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"17c7229c-3b70-4d2d-e4a8-ead655a820a7"},"source":["from sklearn.metrics import mean_absolute_percentage_error\n","\n","y_pred = model.predict(X_test_scaled)\n","\n","mape = mean_absolute_percentage_error(y_test, y_pred)\n","\n","print(f\"Test MAPE: {mape:.4f}\")"],"execution_count":45,"outputs":[{"output_type":"stream","name":"stdout","text":["\u001b[1m7/7\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step \n","Test MAPE: 0.2188\n"]}]},{"cell_type":"markdown","metadata":{"id":"a6ed5b91"},"source":["## Summary:\n","\n","### Data Analysis Key Findings\n","\n","* The features used for the regression model were 'Vehicles\\_Involved', 'Injuries', 'Fatalities', 'Average\\_Speed', 'Alcohol\\_Involved', 'Severity\\_Index', 'Injuries\\_per\\_Vehicle', 'Fatalities\\_per\\_Vehicle', 'Log\\_Damage\\_Cost', 'Year', 'Month', 'Day', 'Hour', 'Weekend', 'Over\\_Speeding', and 'Speed\\_Squared', with the target variable being 'Damage\\_Cost\\_USD'.\n","* The data was split into training and testing sets with 80% for training and 20% for testing.\n","* The numerical features were scaled using `StandardScaler`.\n","* The neural network model was built with an input layer, two hidden layers using ReLU activation, and an output layer with linear activation.\n","* The model was compiled using the Adam optimizer and Mean Squared Error (MSE) as the loss function, with Mean Absolute Error (MAE) as a metric.\n","* The model was trained for 100 epochs with a batch size of 32 and a validation split of 0.2.\n","* The model's performance on the test set resulted in a Test Loss of approximately 10,176,093.0000 and a Test MAE of approximately 2590.5996.\n","\n","### Insights or Next Steps\n","\n","* The high Test Loss and MAE suggest that the model's predictions have a significant average deviation from the actual damage costs. Further hyperparameter tuning or exploring more complex model architectures could potentially improve performance.\n","* Analyzing the distribution of the 'Damage\\_Cost\\_USD' and the relationship between features and the target variable could provide insights into potential data transformations or feature engineering that might help the model learn more effectively."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":159},"id":"c1e6dd57","executionInfo":{"status":"error","timestamp":1758242626631,"user_tz":300,"elapsed":56,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"ecb8729d-7dc5-49b1-a3d2-e50ae705f894"},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2, random_state=42)"],"execution_count":29,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_data' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-695079372.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmodel_selection\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 2\u001b[0;31m \u001b[0mX_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mX_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mtrain_test_split\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_data\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mtest_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.2\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mrandom_state\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m42\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'X_data' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":193},"id":"c46900ae","executionInfo":{"status":"error","timestamp":1758242627134,"user_tz":300,"elapsed":16,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"9a6d5c27-9eb2-4101-eafd-d8a0464b844c"},"source":["from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"execution_count":30,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-1062091675.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mscaler\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mStandardScaler\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mX_train_scaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit_transform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mX_test_scaled\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mscaler\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtransform\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"cc815f29","executionInfo":{"status":"error","timestamp":1758242627726,"user_tz":300,"elapsed":50,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"34a5ad60-53b2-4260-8a0a-77b1928a2f5d"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","model = Sequential()\n","model.add(Dense(64, input_dim=X_train_scaled.shape[1], activation='relu'))\n","model.add(Dense(32, activation='relu'))\n","model.add(Dense(1, activation='linear'))"],"execution_count":31,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-2635531379.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m64\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_dim\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mX_train_scaled\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'linear'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"id":"68b942bd","executionInfo":{"status":"ok","timestamp":1758242628236,"user_tz":300,"elapsed":31,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["model.compile(optimizer='adam', loss='mse', metrics=['mae'])"],"execution_count":32,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"719f4f12","executionInfo":{"status":"error","timestamp":1758242628739,"user_tz":300,"elapsed":53,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"27fa91af-65fb-45d1-f7c8-6e40c60f77b3"},"source":["history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, validation_split=0.2)"],"execution_count":33,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-4276595889.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_scaled\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_split\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'X_train_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":176},"id":"3e71eb5d","executionInfo":{"status":"error","timestamp":1758242629267,"user_tz":300,"elapsed":5,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"30591fce-8364-44bb-966e-8dc87534b31b"},"source":["evaluation_results = model.evaluate(X_test_scaled, y_test, verbose=0)\n","print(f\"Test Loss: {evaluation_results[0]:.4f}\")\n","print(f\"Test MAE: {evaluation_results[1]:.4f}\")"],"execution_count":34,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_test_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-4173714580.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mevaluation_results\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mevaluate\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_scaled\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mverbose\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Test Loss: {evaluation_results[0]:.4f}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0mprint\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34mf\"Test MAE: {evaluation_results[1]:.4f}\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_test_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"9ed8129c","executionInfo":{"status":"error","timestamp":1758242629833,"user_tz":300,"elapsed":41,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"e8d5c590-1f25-43fd-91e3-f83d31ed9e8e"},"source":["from sklearn.metrics import mean_absolute_percentage_error\n","\n","y_pred = model.predict(X_test_scaled)\n","\n","mape = mean_absolute_percentage_error(y_test, y_pred)\n","\n","print(f\"Test MAPE: {mape:.4f}\")"],"execution_count":35,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_test_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-1853492065.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmean_absolute_percentage_error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_scaled\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmape\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmean_absolute_percentage_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_test_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"21b79ebd","executionInfo":{"status":"error","timestamp":1758242595329,"user_tz":300,"elapsed":39,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"5834c2bf-ca5d-4e91-8f12-0505837d8a76"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","model = Sequential()\n","model.add(Dense(64, input_dim=X_train_scaled.shape[1], activation='relu'))\n","model.add(Dense(32, activation='relu'))\n","model.add(Dense(1, activation='linear'))"],"execution_count":28,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-2635531379.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      3\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      4\u001b[0m \u001b[0mmodel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mSequential\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 5\u001b[0;31m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m64\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0minput_dim\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mX_train_scaled\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mshape\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      6\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'relu'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      7\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0madd\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mDense\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;36m1\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mactivation\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m'linear'\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_train_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"id":"caa09502","executionInfo":{"status":"ok","timestamp":1758241178623,"user_tz":300,"elapsed":30,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}}},"source":["model.compile(optimizer='adam', loss='mse', metrics=['mae'])"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":141},"id":"5b64a544","executionInfo":{"status":"error","timestamp":1758241251900,"user_tz":300,"elapsed":24,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"284b3a5b-fdf1-491d-c131-b291654282b8"},"source":["history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, validation_split=0.2)"],"execution_count":12,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_train_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-4276595889.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mhistory\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mfit\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_train_scaled\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_train\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mepochs\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m100\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mbatch_size\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m32\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mvalidation_split\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;36m0.2\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m","\u001b[0;31mNameError\u001b[0m: name 'X_train_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"8cb87dec","executionInfo":{"status":"error","timestamp":1758241271182,"user_tz":300,"elapsed":33,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"bb958fef-af7c-41a9-f28f-3da6ec4f0c11"},"source":["from sklearn.metrics import mean_absolute_percentage_error\n","\n","y_pred = model.predict(X_test_scaled)\n","\n","mape = mean_absolute_percentage_error(y_test, y_pred)\n","\n","print(f\"Test MAPE: {mape:.4f}\")"],"execution_count":13,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_test_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-1853492065.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmean_absolute_percentage_error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_scaled\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmape\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmean_absolute_percentage_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_test_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":211},"id":"3210f983","executionInfo":{"status":"error","timestamp":1758241278968,"user_tz":300,"elapsed":164,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"cae79a3a-6190-46c8-e398-a964098c8924"},"source":["from sklearn.metrics import mean_absolute_percentage_error\n","\n","y_pred = model.predict(X_test_scaled)\n","\n","mape = mean_absolute_percentage_error(y_test, y_pred)\n","\n","print(f\"Test MAPE: {mape:.4f}\")"],"execution_count":14,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'X_test_scaled' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-1853492065.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0;32mfrom\u001b[0m \u001b[0msklearn\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mmetrics\u001b[0m \u001b[0;32mimport\u001b[0m \u001b[0mmean_absolute_percentage_error\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0my_pred\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmodel\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mpredict\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mX_test_scaled\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      4\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      5\u001b[0m \u001b[0mmape\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mmean_absolute_percentage_error\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0my_test\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0my_pred\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'X_test_scaled' is not defined"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":159},"id":"1b4c60e3","executionInfo":{"status":"error","timestamp":1758241297407,"user_tz":300,"elapsed":30,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"1a45a739-c3fe-4810-976e-1a043c6298d8"},"source":["numeric_df = df.select_dtypes(include=['number'])\n","display(numeric_df.head())"],"execution_count":15,"outputs":[{"output_type":"error","ename":"NameError","evalue":"name 'df' is not defined","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mNameError\u001b[0m                                 Traceback (most recent call last)","\u001b[0;32m/tmp/ipython-input-179547460.py\u001b[0m in \u001b[0;36m<cell line: 0>\u001b[0;34m()\u001b[0m\n\u001b[0;32m----> 1\u001b[0;31m \u001b[0mnumeric_df\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mdf\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mselect_dtypes\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0minclude\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'number'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m      2\u001b[0m \u001b[0mdisplay\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mnumeric_df\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mhead\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mNameError\u001b[0m: name 'df' is not defined"]}]},{"cell_type":"markdown","metadata":{"id":"d302988f"},"source":["# Task\n","Train a regression neural network model using the provided data. Define the features (X) and target (y), split the data into training and testing sets, scale the data, build, compile, and train the model, and finally evaluate its performance."]},{"cell_type":"markdown","metadata":{"id":"d45866fd"},"source":["## Define x and y\n","\n","### Subtask:\n","Specify which columns from your DataFrame will be used as features (X) and which column is the target variable (y) for your regression model.\n"]},{"cell_type":"markdown","metadata":{"id":"9bb31863"},"source":["**Reasoning**:\n","Select the features and target from the DataFrame.\n","\n"]},{"cell_type":"code","metadata":{"id":"03daa73c"},"source":["X = ['Vehicles_Involved', 'Injuries', 'Fatalities', 'Average_Speed', 'Alcohol_Involved', 'Severity_Index', 'Injuries_per_Vehicle', 'Fatalities_per_Vehicle', 'Log_Damage_Cost', 'Year', 'Month', 'Day', 'Hour', 'Weekend', 'Over_Speeding', 'Speed_Squared']\n","y = 'Damage_Cost_USD'\n","X_data = df[X]\n","y_data = df[y]"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"095b5404"},"source":["## Split data\n","\n","### Subtask:\n","Split the data into training and testing sets to evaluate the model's performance on unseen data.\n"]},{"cell_type":"markdown","metadata":{"id":"f6c4b10e"},"source":["**Reasoning**:\n","Split the data into training and testing sets using train_test_split.\n","\n"]},{"cell_type":"code","metadata":{"id":"a741932c"},"source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=0.2, random_state=42)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"c4a9b475"},"source":["## Scale data\n","\n","### Subtask:\n","Apply a scaler to the numerical features to ensure they are on a similar scale, which can improve the performance of neural networks.\n"]},{"cell_type":"markdown","metadata":{"id":"f955418c"},"source":["**Reasoning**:\n","Import the StandardScaler, instantiate it, fit it on the training data, and then transform both training and testing data.\n","\n"]},{"cell_type":"code","metadata":{"id":"293f325e"},"source":["from sklearn.preprocessing import StandardScaler\n","\n","scaler = StandardScaler()\n","\n","X_train_scaled = scaler.fit_transform(X_train)\n","X_test_scaled = scaler.transform(X_test)"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"d1afc51d"},"source":["## Build the model\n","\n","### Subtask:\n","Define the architecture of the neural network using a library like TensorFlow or Keras.\n"]},{"cell_type":"markdown","metadata":{"id":"f5115074"},"source":["**Reasoning**:\n","Import necessary modules from tensorflow.keras and define the neural network architecture using Sequential and Dense layers.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"56bd21f6","executionInfo":{"status":"ok","timestamp":1757986703129,"user_tz":300,"elapsed":6037,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"e79387d3-8691-46c4-a84f-820500cb24c7"},"source":["from tensorflow.keras.models import Sequential\n","from tensorflow.keras.layers import Dense\n","\n","model = Sequential()\n","model.add(Dense(64, input_dim=X_train_scaled.shape[1], activation='relu'))\n","model.add(Dense(32, activation='relu'))\n","model.add(Dense(1, activation='linear'))"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/keras/src/layers/core/dense.py:93: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.\n","  super().__init__(activity_regularizer=activity_regularizer, **kwargs)\n"]}]},{"cell_type":"markdown","metadata":{"id":"9d0e8846"},"source":["**Reasoning**:\n","Compile the neural network model by specifying the optimizer, loss function, and metrics.\n","\n"]},{"cell_type":"code","metadata":{"id":"FqodxAAsLGGC"},"source":["model.compile(optimizer='adam', loss='mse', metrics=['mae'])"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"4026cd54"},"source":["## Train the model\n","\n","### Subtask:\n","Train the neural network using the training data.\n"]},{"cell_type":"markdown","metadata":{"id":"0180865f"},"source":["**Reasoning**:\n","Train the compiled neural network model using the scaled training data and the training target variable.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6c0d8311","executionInfo":{"status":"ok","timestamp":1757986741048,"user_tz":300,"elapsed":19201,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"eba681f7-d39d-4a5b-8930-9e147d593856"},"source":["history = model.fit(X_train_scaled, y_train, epochs=100, batch_size=32, validation_split=0.2)"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m2s\u001b[0m 19ms/step - loss: 875907776.0000 - mae: 26060.2168 - val_loss: 802815488.0000 - val_mae: 24550.9023\n","Epoch 2/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 871503296.0000 - mae: 25948.4648 - val_loss: 802724992.0000 - val_mae: 24549.1895\n","Epoch 3/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 827787904.0000 - mae: 25294.9824 - val_loss: 802578944.0000 - val_mae: 24546.4961\n","Epoch 4/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 851867648.0000 - mae: 25606.6895 - val_loss: 802334400.0000 - val_mae: 24542.1367\n","Epoch 5/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 853717120.0000 - mae: 25844.2539 - val_loss: 801960576.0000 - val_mae: 24535.5781\n","Epoch 6/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 818774912.0000 - mae: 24865.4629 - val_loss: 801411136.0000 - val_mae: 24526.0859\n","Epoch 7/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 839640384.0000 - mae: 25143.4824 - val_loss: 800623424.0000 - val_mae: 24512.6504\n","Epoch 8/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 903187200.0000 - mae: 26564.4844 - val_loss: 799538688.0000 - val_mae: 24494.2910\n","Epoch 9/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 832461760.0000 - mae: 24998.8457 - val_loss: 798127808.0000 - val_mae: 24470.5820\n","Epoch 10/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 829905408.0000 - mae: 25283.0820 - val_loss: 796306048.0000 - val_mae: 24440.1035\n","Epoch 11/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 824440064.0000 - mae: 25052.3145 - val_loss: 794044608.0000 - val_mae: 24402.4414\n","Epoch 12/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 848980992.0000 - mae: 25293.3516 - val_loss: 791288384.0000 - val_mae: 24356.7031\n","Epoch 13/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 880150784.0000 - mae: 26361.8613 - val_loss: 788023936.0000 - val_mae: 24302.4375\n","Epoch 14/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 794198144.0000 - mae: 24301.4395 - val_loss: 784188352.0000 - val_mae: 24238.9121\n","Epoch 15/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 783097856.0000 - mae: 24322.0918 - val_loss: 779752960.0000 - val_mae: 24164.9648\n","Epoch 16/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 822976256.0000 - mae: 25156.0234 - val_loss: 774466304.0000 - val_mae: 24077.2441\n","Epoch 17/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 818099264.0000 - mae: 25130.4844 - val_loss: 768529024.0000 - val_mae: 23978.0840\n","Epoch 18/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 846352320.0000 - mae: 25625.6895 - val_loss: 761790144.0000 - val_mae: 23865.4590\n","Epoch 19/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 779089728.0000 - mae: 24477.5371 - val_loss: 754437440.0000 - val_mae: 23741.9043\n","Epoch 20/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 779141504.0000 - mae: 24411.8203 - val_loss: 746237184.0000 - val_mae: 23603.6367\n","Epoch 21/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 799937344.0000 - mae: 24548.3770 - val_loss: 737209600.0000 - val_mae: 23450.4727\n","Epoch 22/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 770861568.0000 - mae: 24283.0898 - val_loss: 727298688.0000 - val_mae: 23281.5977\n","Epoch 23/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 763105984.0000 - mae: 24129.6602 - val_loss: 716767552.0000 - val_mae: 23100.4863\n","Epoch 24/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 735288832.0000 - mae: 23273.2324 - val_loss: 705373568.0000 - val_mae: 22902.8438\n","Epoch 25/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 704889216.0000 - mae: 22819.9492 - val_loss: 693064256.0000 - val_mae: 22688.2090\n","Epoch 26/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 711622464.0000 - mae: 23136.9102 - val_loss: 679888960.0000 - val_mae: 22455.6914\n","Epoch 27/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 683836096.0000 - mae: 22651.9941 - val_loss: 666220544.0000 - val_mae: 22211.8242\n","Epoch 28/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 718292480.0000 - mae: 23615.3828 - val_loss: 651373568.0000 - val_mae: 21944.0195\n","Epoch 29/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 665461760.0000 - mae: 22374.6250 - val_loss: 636230720.0000 - val_mae: 21667.9961\n","Epoch 30/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 627056192.0000 - mae: 21641.8809 - val_loss: 620440384.0000 - val_mae: 21379.7012\n","Epoch 31/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 653334528.0000 - mae: 22116.4844 - val_loss: 603562432.0000 - val_mae: 21068.1230\n","Epoch 32/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 582914560.0000 - mae: 20933.5605 - val_loss: 586681088.0000 - val_mae: 20751.3242\n","Epoch 33/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 580202816.0000 - mae: 20691.4414 - val_loss: 568964736.0000 - val_mae: 20412.5996\n","Epoch 34/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 559248000.0000 - mae: 20459.5332 - val_loss: 550645568.0000 - val_mae: 20056.5918\n","Epoch 35/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 575659520.0000 - mae: 20780.8652 - val_loss: 532016224.0000 - val_mae: 19687.5508\n","Epoch 36/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 547279616.0000 - mae: 20345.8535 - val_loss: 512932928.0000 - val_mae: 19304.9023\n","Epoch 37/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 525469600.0000 - mae: 19837.4395 - val_loss: 493542560.0000 - val_mae: 18908.0645\n","Epoch 38/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 466593600.0000 - mae: 18571.8242 - val_loss: 474105536.0000 - val_mae: 18500.1055\n","Epoch 39/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 453101248.0000 - mae: 18070.1602 - val_loss: 454626368.0000 - val_mae: 18085.6387\n","Epoch 40/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 435566944.0000 - mae: 17730.0078 - val_loss: 434770176.0000 - val_mae: 17652.2695\n","Epoch 41/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 390737312.0000 - mae: 16795.7207 - val_loss: 414944512.0000 - val_mae: 17208.1660\n","Epoch 42/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 372323296.0000 - mae: 16310.8340 - val_loss: 395152032.0000 - val_mae: 16761.6211\n","Epoch 43/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 362454560.0000 - mae: 16073.3623 - val_loss: 375406848.0000 - val_mae: 16303.6660\n","Epoch 44/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 345773792.0000 - mae: 15723.7764 - val_loss: 355983424.0000 - val_mae: 15840.4590\n","Epoch 45/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 330756128.0000 - mae: 15427.2812 - val_loss: 336908192.0000 - val_mae: 15371.3936\n","Epoch 46/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 306196608.0000 - mae: 14715.9316 - val_loss: 318285344.0000 - val_mae: 14900.0830\n","Epoch 47/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 284856608.0000 - mae: 14199.3018 - val_loss: 299979456.0000 - val_mae: 14427.7109\n","Epoch 48/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 272752448.0000 - mae: 13715.9121 - val_loss: 281816736.0000 - val_mae: 13949.3701\n","Epoch 49/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 247658304.0000 - mae: 13247.5996 - val_loss: 264561840.0000 - val_mae: 13476.8184\n","Epoch 50/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 239116784.0000 - mae: 13004.5771 - val_loss: 247581392.0000 - val_mae: 13002.1484\n","Epoch 51/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 218532464.0000 - mae: 12334.6289 - val_loss: 231634864.0000 - val_mae: 12538.0312\n","Epoch 52/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 196298720.0000 - mae: 11651.1543 - val_loss: 216078464.0000 - val_mae: 12067.7500\n","Epoch 53/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 180984112.0000 - mae: 11137.1904 - val_loss: 201105600.0000 - val_mae: 11604.8994\n","Epoch 54/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 173165664.0000 - mae: 10844.8047 - val_loss: 187134912.0000 - val_mae: 11156.8330\n","Epoch 55/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 166276256.0000 - mae: 10712.1240 - val_loss: 173421136.0000 - val_mae: 10695.3379\n","Epoch 56/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 150605792.0000 - mae: 10188.7930 - val_loss: 160636640.0000 - val_mae: 10248.1641\n","Epoch 57/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 129812144.0000 - mae: 9348.0391 - val_loss: 148796512.0000 - val_mae: 9814.0449\n","Epoch 58/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 125853208.0000 - mae: 9135.5361 - val_loss: 137591328.0000 - val_mae: 9392.1064\n","Epoch 59/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 111056184.0000 - mae: 8551.2344 - val_loss: 127009776.0000 - val_mae: 8977.1709\n","Epoch 60/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 104375960.0000 - mae: 8272.4023 - val_loss: 117275760.0000 - val_mae: 8583.2949\n","Epoch 61/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 92753912.0000 - mae: 7842.1880 - val_loss: 108048616.0000 - val_mae: 8202.9434\n","Epoch 62/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 85648488.0000 - mae: 7393.9526 - val_loss: 99648816.0000 - val_mae: 7847.4600\n","Epoch 63/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 82900624.0000 - mae: 7336.9058 - val_loss: 91939056.0000 - val_mae: 7515.0444\n","Epoch 64/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 77226248.0000 - mae: 7007.5981 - val_loss: 84642800.0000 - val_mae: 7185.8604\n","Epoch 65/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 70664744.0000 - mae: 6696.3345 - val_loss: 78070824.0000 - val_mae: 6890.9541\n","Epoch 66/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 62843280.0000 - mae: 6313.7114 - val_loss: 72188504.0000 - val_mae: 6620.6860\n","Epoch 67/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 52652464.0000 - mae: 5755.6943 - val_loss: 66748940.0000 - val_mae: 6359.3530\n","Epoch 68/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 45788952.0000 - mae: 5282.6841 - val_loss: 61614080.0000 - val_mae: 6103.4897\n","Epoch 69/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 45458940.0000 - mae: 5339.9941 - val_loss: 56891288.0000 - val_mae: 5858.9033\n","Epoch 70/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 42018364.0000 - mae: 5096.5972 - val_loss: 52782508.0000 - val_mae: 5637.5142\n","Epoch 71/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 39606200.0000 - mae: 4971.0107 - val_loss: 49017768.0000 - val_mae: 5430.0117\n","Epoch 72/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 37704460.0000 - mae: 4823.4390 - val_loss: 45480248.0000 - val_mae: 5230.6118\n","Epoch 73/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 35243052.0000 - mae: 4612.5713 - val_loss: 42399136.0000 - val_mae: 5052.3828\n","Epoch 74/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 33229630.0000 - mae: 4530.5684 - val_loss: 39518112.0000 - val_mae: 4885.0078\n","Epoch 75/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 27703932.0000 - mae: 4139.5752 - val_loss: 36998400.0000 - val_mae: 4734.9458\n","Epoch 76/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 27782440.0000 - mae: 4160.2437 - val_loss: 34580424.0000 - val_mae: 4587.1553\n","Epoch 77/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 26650432.0000 - mae: 4068.6799 - val_loss: 32464332.0000 - val_mae: 4452.9468\n","Epoch 78/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 6ms/step - loss: 23234164.0000 - mae: 3877.7688 - val_loss: 30527654.0000 - val_mae: 4325.2686\n","Epoch 79/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 25454044.0000 - mae: 3989.3335 - val_loss: 28711722.0000 - val_mae: 4201.2549\n","Epoch 80/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 22956028.0000 - mae: 3771.6208 - val_loss: 27078768.0000 - val_mae: 4085.8093\n","Epoch 81/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 20075084.0000 - mae: 3553.6736 - val_loss: 25568014.0000 - val_mae: 3975.7358\n","Epoch 82/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 19078730.0000 - mae: 3429.5798 - val_loss: 24233936.0000 - val_mae: 3877.0991\n","Epoch 83/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 19764222.0000 - mae: 3516.1829 - val_loss: 22910138.0000 - val_mae: 3774.8098\n","Epoch 84/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 17432496.0000 - mae: 3350.6333 - val_loss: 21794606.0000 - val_mae: 3685.5422\n","Epoch 85/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 10ms/step - loss: 17168456.0000 - mae: 3289.6934 - val_loss: 20663324.0000 - val_mae: 3590.0396\n","Epoch 86/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 9ms/step - loss: 15885959.0000 - mae: 3174.7578 - val_loss: 19641324.0000 - val_mae: 3501.5601\n","Epoch 87/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 8ms/step - loss: 14108617.0000 - mae: 2994.3247 - val_loss: 18694966.0000 - val_mae: 3417.0559\n","Epoch 88/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 13488360.0000 - mae: 2959.0583 - val_loss: 17794836.0000 - val_mae: 3334.6655\n","Epoch 89/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 14869710.0000 - mae: 3033.8745 - val_loss: 16941910.0000 - val_mae: 3254.5447\n","Epoch 90/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 13872366.0000 - mae: 2993.9167 - val_loss: 16156626.0000 - val_mae: 3179.0271\n","Epoch 91/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 13143293.0000 - mae: 2896.3079 - val_loss: 15456722.0000 - val_mae: 3110.3005\n","Epoch 92/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 12249600.0000 - mae: 2837.9377 - val_loss: 14752198.0000 - val_mae: 3040.1733\n","Epoch 93/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 13099992.0000 - mae: 2925.3096 - val_loss: 14103504.0000 - val_mae: 2974.0044\n","Epoch 94/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 11215024.0000 - mae: 2662.9580 - val_loss: 13503026.0000 - val_mae: 2909.4878\n","Epoch 95/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 11785298.0000 - mae: 2768.5525 - val_loss: 12938397.0000 - val_mae: 2849.0747\n","Epoch 96/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 10050101.0000 - mae: 2541.1768 - val_loss: 12397113.0000 - val_mae: 2787.8796\n","Epoch 97/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 10437565.0000 - mae: 2590.4583 - val_loss: 11889285.0000 - val_mae: 2730.0750\n","Epoch 98/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 9902685.0000 - mae: 2520.2498 - val_loss: 11396554.0000 - val_mae: 2672.5613\n","Epoch 99/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 7ms/step - loss: 9469645.0000 - mae: 2455.5344 - val_loss: 10945789.0000 - val_mae: 2618.3140\n","Epoch 100/100\n","\u001b[1m20/20\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 5ms/step - loss: 9254270.0000 - mae: 2420.3303 - val_loss: 10513719.0000 - val_mae: 2565.7358\n"]}]},{"cell_type":"markdown","metadata":{"id":"f7364676"},"source":["## Evaluate the model\n","\n","### Subtask:\n","Evaluate the trained model's performance on the testing data using appropriate regression metrics.\n"]},{"cell_type":"markdown","metadata":{"id":"ed3635a8"},"source":["**Reasoning**:\n","Evaluate the trained model on the test data to assess its performance.\n","\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f5ebc7a0","executionInfo":{"status":"ok","timestamp":1757986756097,"user_tz":300,"elapsed":327,"user":{"displayName":"DERLY RAMIREZ","userId":"11635856236512875207"}},"outputId":"94d9a6c1-c265-4341-a83d-2a2ca75765cf"},"source":["evaluation_results = model.evaluate(X_test_scaled, y_test, verbose=0)\n","print(f\"Test Loss: {evaluation_results[0]:.4f}\")\n","print(f\"Test MAE: {evaluation_results[1]:.4f}\")"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Test Loss: 10176093.0000\n","Test MAE: 2590.5996\n"]}]},{"cell_type":"markdown","metadata":{"id":"9d2fa226"},"source":["## Summary:\n","\n","### Data Analysis Key Findings\n","\n","*   The features used for the regression model were 'Vehicles\\_Involved', 'Injuries', 'Fatalities', 'Average\\_Speed', 'Alcohol\\_Involved', 'Severity\\_Index', 'Injuries\\_per\\_Vehicle', 'Fatalities\\_per\\_Vehicle', 'Log\\_Damage\\_Cost', 'Year', 'Month', 'Day', 'Hour', 'Weekend', 'Over\\_Speeding', and 'Speed\\_Squared', with the target variable being 'Damage\\_Cost\\_USD'.\n","*   The data was split into training and testing sets with 80% for training and 20% for testing.\n","*   The numerical features were scaled using `StandardScaler`.\n","*   The neural network model was built with an input layer, two hidden layers using ReLU activation, and an output layer with linear activation.\n","*   The model was compiled using the Adam optimizer and Mean Squared Error (MSE) as the loss function, with Mean Absolute Error (MAE) as a metric.\n","*   The model was trained for 100 epochs with a batch size of 32 and a validation split of 0.2.\n","*   The model's performance on the test set resulted in a Test Loss of approximately 10,176,093.0000 and a Test MAE of approximately 2590.5996.\n","\n","### Insights or Next Steps\n","\n","*   The high Test Loss and MAE suggest that the model's predictions have a significant average deviation from the actual damage costs. Further hyperparameter tuning or exploring more complex model architectures could potentially improve performance.\n","*   Analyzing the distribution of the 'Damage\\_Cost\\_USD' and the relationship between features and the target variable could provide insights into potential data transformations or feature engineering that might help the model learn more effectively.\n"]}]}